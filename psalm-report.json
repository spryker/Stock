{
    "error": [
        {
            "severity": "error",
            "line_from": 64,
            "line_to": 64,
            "type": "InvalidReturnType",
            "message": "The declared return type 'array<array-key, array<array-key, string>>' for Spryker\\Zed\\Stock\\Business\\Stock\\StockMapper::mapStockToStores is incorrect, got 'array<array-key, array<array-key, null|string>>'",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockMapper.php",
            "snippet": "     * @return string[][]",
            "selected_text": "string[][]",
            "error_level": 6,
            "shortcode": 11
        },
        {
            "severity": "error",
            "line_from": 75,
            "line_to": 75,
            "type": "InvalidReturnStatement",
            "message": "The inferred type 'array<array-key, array<array-key, null|string>>' does not match the declared return type 'array<array-key, array<array-key, string>>' for Spryker\\Zed\\Stock\\Business\\Stock\\StockMapper::mapStockToStores",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockMapper.php",
            "snippet": "        return $storeStockMapping;",
            "selected_text": "$storeStockMapping",
            "error_level": 6,
            "shortcode": 128
        },
        {
            "severity": "error",
            "line_from": 81,
            "line_to": 81,
            "type": "InvalidReturnType",
            "message": "The declared return type 'array<array-key, string>' for Spryker\\Zed\\Stock\\Business\\Stock\\StockMapper::getStoreNamesFromStoreRelation is incorrect, got 'array<array-key|mixed, mixed|null|string>'",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockMapper.php",
            "snippet": "     * @return string[]",
            "selected_text": "string[]",
            "error_level": 6,
            "shortcode": 11
        },
        {
            "severity": "error",
            "line_from": 91,
            "line_to": 91,
            "type": "InvalidReturnStatement",
            "message": "The inferred type 'array<array-key|mixed, mixed|null|string>' does not match the declared return type 'array<array-key, string>' for Spryker\\Zed\\Stock\\Business\\Stock\\StockMapper::getStoreNamesFromStoreRelation",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockMapper.php",
            "snippet": "        return $storeNames;",
            "selected_text": "$storeNames",
            "error_level": 6,
            "shortcode": 128
        },
        {
            "severity": "error",
            "line_from": 84,
            "line_to": 84,
            "type": "InvalidArgument",
            "message": "Argument 1 of Generated\\Shared\\Transfer\\StockCriteriaFilterTransfer::setStoreNames expects array<array-key, string>|null, array{null|string} provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockReader.php",
            "snippet": "            ->setStoreNames([$storeTransfer->getName()]);",
            "selected_text": "[$storeTransfer->getName()]",
            "error_level": 6,
            "shortcode": 4
        },
        {
            "severity": "error",
            "line_from": 46,
            "line_to": 46,
            "type": "InvalidReturnType",
            "message": "The declared return type 'Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery' for Spryker\\Zed\\Stock\\Persistence\\StockQueryContainer::queryStockByNeverOutOfStockAllTypesForStockNames is incorrect, got 'Orm\\Zed\\MerchantStock\\Persistence\\SpyMerchantStockQuery|Orm\\Zed\\ProductOfferStock\\Persistence\\SpyProductOfferStockQuery|Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery|Orm\\Zed\\Stock\\Persistence\\SpyStockStoreQuery'",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockQueryContainer.php",
            "snippet": "     * @return \\Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery",
            "selected_text": "\\Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery",
            "error_level": 6,
            "shortcode": 11
        },
        {
            "severity": "error",
            "line_from": 50,
            "line_to": 55,
            "type": "InvalidReturnStatement",
            "message": "The inferred type 'Orm\\Zed\\MerchantStock\\Persistence\\SpyMerchantStockQuery|Orm\\Zed\\ProductOfferStock\\Persistence\\SpyProductOfferStockQuery|Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery|Orm\\Zed\\Stock\\Persistence\\SpyStockStoreQuery' does not match the declared return type 'Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery' for Spryker\\Zed\\Stock\\Persistence\\StockQueryContainer::queryStockByNeverOutOfStockAllTypesForStockNames",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockQueryContainer.php",
            "snippet": "        return $this\n            ->queryStockByNeverOutOfStockAllTypes($idProduct)\n            ->useStockQuery()\n                ->filterByName($stockNames, Criteria::IN)\n                ->filterByIsActive(true)\n            ->endUse();",
            "selected_text": "$this\n            ->queryStockByNeverOutOfStockAllTypes($idProduct)\n            ->useStockQuery()\n                ->filterByName($stockNames, Criteria::IN)\n                ->filterByIsActive(true)\n            ->endUse()",
            "error_level": 6,
            "shortcode": 128
        },
        {
            "severity": "error",
            "line_from": 82,
            "line_to": 82,
            "type": "InvalidReturnType",
            "message": "The declared return type 'Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery' for Spryker\\Zed\\Stock\\Persistence\\StockQueryContainer::queryStockByProductsForStockNames is incorrect, got 'Orm\\Zed\\MerchantStock\\Persistence\\SpyMerchantStockQuery|Orm\\Zed\\ProductOfferStock\\Persistence\\SpyProductOfferStockQuery|Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery|Orm\\Zed\\Stock\\Persistence\\SpyStockStoreQuery'",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockQueryContainer.php",
            "snippet": "     * @return \\Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery",
            "selected_text": "\\Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery",
            "error_level": 6,
            "shortcode": 11
        },
        {
            "severity": "error",
            "line_from": 86,
            "line_to": 89,
            "type": "InvalidReturnStatement",
            "message": "The inferred type 'Orm\\Zed\\MerchantStock\\Persistence\\SpyMerchantStockQuery|Orm\\Zed\\ProductOfferStock\\Persistence\\SpyProductOfferStockQuery|Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery|Orm\\Zed\\Stock\\Persistence\\SpyStockStoreQuery' does not match the declared return type 'Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery' for Spryker\\Zed\\Stock\\Persistence\\StockQueryContainer::queryStockByProductsForStockNames",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockQueryContainer.php",
            "snippet": "        return $this->queryStockByProducts($idProduct)\n            ->useStockQuery()\n                ->filterByName($stockNames, Criteria::IN)\n            ->endUse();",
            "selected_text": "$this->queryStockByProducts($idProduct)\n            ->useStockQuery()\n                ->filterByName($stockNames, Criteria::IN)\n            ->endUse()",
            "error_level": 6,
            "shortcode": 128
        },
        {
            "severity": "error",
            "line_from": 236,
            "line_to": 236,
            "type": "InvalidReturnType",
            "message": "The declared return type 'Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery' for Spryker\\Zed\\Stock\\Persistence\\StockRepository::queryStockProductByProductAbstractSkuAndStore is incorrect, got 'Orm\\Zed\\AvailabilityNotification\\Persistence\\SpyAvailabilityNotificationSubscriptionQuery|Orm\\Zed\\Availability\\Persistence\\SpyAvailabilityAbstractQuery|Orm\\Zed\\Availability\\Persistence\\SpyAvailabilityQuery|Orm\\Zed\\CategoryImage\\Persistence\\SpyCategoryImageSetQuery|Orm\\Zed\\Category\\Persistence\\SpyCategoryAttributeQuery|Orm\\Zed\\CmsBlockCategoryConnector\\Persistence\\SpyCmsBlockCategoryConnectorQuery|Orm\\Zed\\CmsBlockProductConnector\\Persistence\\SpyCmsBlockProductConnectorQuery|Orm\\Zed\\CmsBlock\\Persistence\\SpyCmsBlockGlossaryKeyMappingQuery|Orm\\Zed\\CmsBlock\\Persistence\\SpyCmsBlockStoreQuery|Orm\\Zed\\CmsBlock\\Persistence\\SpyCmsBlockTemplateQuery|Orm\\Zed\\CmsSlotBlock\\Persistence\\SpyCmsSlotBlockQuery|Orm\\Zed\\Cms\\Persistence\\SpyCmsGlossaryKeyMappingQuery|Orm\\Zed\\Cms\\Persistence\\SpyCmsPageLocalizedAttributesQuery|Orm\\Zed\\Cms\\Persistence\\SpyCmsPageStoreQuery|Orm\\Zed\\Cms\\Persistence\\SpyCmsTemplateQuery|Orm\\Zed\\Cms\\Persistence\\SpyCmsVersionQuery|Orm\\Zed\\CompanyBusinessUnit\\Persistence\\SpyCompanyBusinessUnitQuery|Orm\\Zed\\CompanyRole\\Persistence\\SpyCompanyRoleQuery|Orm\\Zed\\CompanySupplier\\Persistence\\SpyCompanySupplierToProductQuery|Orm\\Zed\\CompanySupplier\\Persistence\\SpyCompanyTypeQuery|Orm\\Zed\\CompanyUnitAddress\\Persistence\\SpyCompanyUnitAddressQuery|Orm\\Zed\\CompanyUser\\Persistence\\SpyCompanyUserQuery|Orm\\Zed\\Company\\Persistence\\SpyCompanyQuery|Orm\\Zed\\Company\\Persistence\\SpyCompanyStoreQuery|Orm\\Zed\\Content\\Persistence\\SpyContentLocalizedQuery|Orm\\Zed\\Currency\\Persistence\\SpyCurrencyQuery|Orm\\Zed\\Customer\\Persistence\\SpyCustomerQuery|Orm\\Zed\\Dataset\\Persistence\\SpyDatasetLocalizedAttributesQuery|Orm\\Zed\\DiscountPromotion\\Persistence\\SpyDiscountPromotionQuery|Orm\\Zed\\Discount\\Persistence\\SpyDiscountAmountQuery|Orm\\Zed\\Discount\\Persistence\\SpyDiscountQuery|Orm\\Zed\\Discount\\Persistence\\SpyDiscountStoreQuery|Orm\\Zed\\Discount\\Persistence\\SpyDiscountVoucherPoolQuery|Orm\\Zed\\Discount\\Persistence\\SpyDiscountVoucherQuery|Orm\\Zed\\FileManager\\Persistence\\SpyFileDirectoryLocalizedAttributesQuery|Orm\\Zed\\FileManager\\Persistence\\SpyFileLocalizedAttributesQuery|Orm\\Zed\\GiftCard\\Persistence\\SpyGiftCardProductAbstractConfigurationLinkQuery|Orm\\Zed\\GiftCard\\Persistence\\SpyGiftCardProductConfigurationLinkQuery|Orm\\Zed\\Glossary\\Persistence\\SpyGlossaryTranslationQuery|Orm\\Zed\\MerchantRelationshipSalesOrderThreshold\\Persistence\\SpyMerchantRelationshipSalesOrderThresholdQuery|Orm\\Zed\\MerchantRelationship\\Persistence\\SpyMerchantRelationshipQuery|Orm\\Zed\\MerchantRelationship\\Persistence\\SpyMerchantRelationshipToCompanyBusinessUnitQuery|Orm\\Zed\\MerchantStock\\Persistence\\SpyMerchantStockQuery|Orm\\Zed\\Merchant\\Persistence\\SpyMerchantQuery|Orm\\Zed\\Navigation\\Persistence\\SpyNavigationNodeLocalizedAttributesQuery|Orm\\Zed\\Oms\\Persistence\\SpyOmsProductReservationQuery|Orm\\Zed\\Payment\\Persistence\\SpyPaymentMethodStoreQuery|Orm\\Zed\\Payment\\Persistence\\SpyPaymentProviderQuery|Orm\\Zed\\PriceProductMerchantRelationship\\Persistence\\SpyPriceProductMerchantRelationshipQuery|Orm\\Zed\\PriceProductOffer\\Persistence\\SpyPriceProductOfferQuery|Orm\\Zed\\PriceProductSchedule\\Persistence\\SpyPriceProductScheduleQuery|Orm\\Zed\\PriceProduct\\Persistence\\SpyPriceProductQuery|Orm\\Zed\\PriceProduct\\Persistence\\SpyPriceProductStoreQuery|Orm\\Zed\\PriceProduct\\Persistence\\SpyPriceTypeQuery|Orm\\Zed\\ProductAlternative\\Persistence\\SpyProductAlternativeQuery|Orm\\Zed\\ProductAttribute\\Persistence\\SpyProductManagementAttributeValueTranslationQuery|Orm\\Zed\\ProductBundle\\Persistence\\SpyProductBundleQuery|Orm\\Zed\\ProductCategory\\Persistence\\SpyProductCategoryQuery|Orm\\Zed\\ProductCustomerPermission\\Persistence\\SpyProductCustomerPermissionQuery|Orm\\Zed\\ProductDiscontinued\\Persistence\\SpyProductDiscontinuedNoteQuery|Orm\\Zed\\ProductDiscontinued\\Persistence\\SpyProductDiscontinuedQuery|Orm\\Zed\\ProductGroup\\Persistence\\SpyProductAbstractGroupQuery|Orm\\Zed\\ProductImage\\Persistence\\SpyProductImageSetQuery|Orm\\Zed\\ProductLabel\\Persistence\\SpyProductLabelLocalizedAttributesQuery|Orm\\Zed\\ProductLabel\\Persistence\\SpyProductLabelProductAbstractQuery|Orm\\Zed\\ProductList\\Persistence\\SpyProductListProductConcreteQuery|Orm\\Zed\\ProductList\\Persistence\\SpyProductListQuery|Orm\\Zed\\ProductMeasurementUnit\\Persistence\\SpyProductMeasurementBaseUnitQuery|Orm\\Zed\\ProductMeasurementUnit\\Persistence\\SpyProductMeasurementSalesUnitQuery|Orm\\Zed\\ProductMeasurementUnit\\Persistence\\SpyProductMeasurementSalesUnitStoreQuery|Orm\\Zed\\ProductMeasurementUnit\\Persistence\\SpyProductMeasurementUnitQuery|Orm\\Zed\\ProductMerchantConnector\\Persistence\\SpyProductAbstractMerchantQuery|Orm\\Zed\\ProductOfferStock\\Persistence\\SpyProductOfferStockQuery|Orm\\Zed\\ProductOfferValidity\\Persistence\\SpyProductOfferValidityQuery|Orm\\Zed\\ProductOffer\\Persistence\\SpyProductOfferQuery|Orm\\Zed\\ProductOffer\\Persistence\\SpyProductOfferStoreQuery|Orm\\Zed\\ProductOption\\Persistence\\SpyProductAbstractProductOptionGroupQuery|Orm\\Zed\\ProductOption\\Persistence\\SpyProductOptionGroupQuery|Orm\\Zed\\ProductOption\\Persistence\\SpyProductOptionValuePriceQuery|Orm\\Zed\\ProductPackagingUnit\\Persistence\\SpyProductPackagingUnitQuery|Orm\\Zed\\ProductQuantity\\Persistence\\SpyProductQuantityQuery|Orm\\Zed\\ProductRelation\\Persistence\\SpyProductRelationProductAbstractQuery|Orm\\Zed\\ProductRelation\\Persistence\\SpyProductRelationQuery|Orm\\Zed\\ProductRelation\\Persistence\\SpyProductRelationStoreQuery|Orm\\Zed\\ProductRelation\\Persistence\\SpyProductRelationTypeQuery|Orm\\Zed\\ProductReview\\Persistence\\SpyProductReviewQuery|Orm\\Zed\\ProductSearch\\Persistence\\SpyProductSearchQuery|Orm\\Zed\\ProductSet\\Persistence\\SpyProductAbstractSetQuery|Orm\\Zed\\ProductSet\\Persistence\\SpyProductSetDataQuery|Orm\\Zed\\ProductValidity\\Persistence\\SpyProductValidityQuery|Orm\\Zed\\Product\\Persistence\\SpyProductAbstractLocalizedAttributesQuery|Orm\\Zed\\Product\\Persistence\\SpyProductAbstractQuery|Orm\\Zed\\Product\\Persistence\\SpyProductAbstractStoreQuery|Orm\\Zed\\Product\\Persistence\\SpyProductLocalizedAttributesQuery|Orm\\Zed\\Product\\Persistence\\SpyProductQuery|Orm\\Zed\\Quote\\Persistence\\SpyQuoteQuery|Orm\\Zed\\SalesOrderThreshold\\Persistence\\SpySalesOrderThresholdQuery|Orm\\Zed\\Sales\\Persistence\\SpySalesOrderQuery|Orm\\Zed\\SharedCart\\Persistence\\SpyQuotePermissionGroupQuery|Orm\\Zed\\Shipment\\Persistence\\SpyShipmentCarrierQuery|Orm\\Zed\\Shipment\\Persistence\\SpyShipmentMethodPriceQuery|Orm\\Zed\\Shipment\\Persistence\\SpyShipmentMethodStoreQuery|Orm\\Zed\\ShoppingListProductOptionConnector\\Persistence\\SpyShoppingListProductOptionQuery|Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery|Orm\\Zed\\Stock\\Persistence\\SpyStockStoreQuery|Orm\\Zed\\Store\\Persistence\\SpyStoreQuery|Orm\\Zed\\Tax\\Persistence\\SpyTaxSetQuery|Orm\\Zed\\Touch\\Persistence\\SpyTouchSearchQuery|Orm\\Zed\\Touch\\Persistence\\SpyTouchStorageQuery|Orm\\Zed\\Url\\Persistence\\SpyUrlQuery|Orm\\Zed\\User\\Persistence\\SpyUserQuery|Orm\\Zed\\Wishlist\\Persistence\\SpyWishlistItemQuery'",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockRepository.php",
            "snippet": "     * @return \\Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery",
            "selected_text": "\\Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery",
            "error_level": 6,
            "shortcode": 11
        },
        {
            "severity": "error",
            "line_from": 240,
            "line_to": 245,
            "type": "UndefinedDocblockClass",
            "message": "Docblock-defined class or interface Orm\\Zed\\ProductMerchantConnector\\Persistence\\SpyProductAbstractMerchantQuery does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockRepository.php",
            "snippet": "        return $this->getFactory()\n            ->createStockProductQuery()\n            ->useSpyProductQuery(null, Criteria::LEFT_JOIN)\n                ->useSpyProductAbstractQuery(null, Criteria::LEFT_JOIN)\n                    ->filterBySku($abstractSku)\n                ->endUse()",
            "selected_text": "$this->getFactory()\n            ->createStockProductQuery()\n            ->useSpyProductQuery(null, Criteria::LEFT_JOIN)\n                ->useSpyProductAbstractQuery(null, Criteria::LEFT_JOIN)\n                    ->filterBySku($abstractSku)\n                ->endUse()",
            "error_level": -1,
            "shortcode": 200
        },
        {
            "severity": "error",
            "line_from": 240,
            "line_to": 254,
            "type": "InvalidReturnStatement",
            "message": "The inferred type 'Orm\\Zed\\AvailabilityNotification\\Persistence\\SpyAvailabilityNotificationSubscriptionQuery|Orm\\Zed\\Availability\\Persistence\\SpyAvailabilityAbstractQuery|Orm\\Zed\\Availability\\Persistence\\SpyAvailabilityQuery|Orm\\Zed\\CategoryImage\\Persistence\\SpyCategoryImageSetQuery|Orm\\Zed\\Category\\Persistence\\SpyCategoryAttributeQuery|Orm\\Zed\\CmsBlockCategoryConnector\\Persistence\\SpyCmsBlockCategoryConnectorQuery|Orm\\Zed\\CmsBlockProductConnector\\Persistence\\SpyCmsBlockProductConnectorQuery|Orm\\Zed\\CmsBlock\\Persistence\\SpyCmsBlockGlossaryKeyMappingQuery|Orm\\Zed\\CmsBlock\\Persistence\\SpyCmsBlockStoreQuery|Orm\\Zed\\CmsBlock\\Persistence\\SpyCmsBlockTemplateQuery|Orm\\Zed\\CmsSlotBlock\\Persistence\\SpyCmsSlotBlockQuery|Orm\\Zed\\Cms\\Persistence\\SpyCmsGlossaryKeyMappingQuery|Orm\\Zed\\Cms\\Persistence\\SpyCmsPageLocalizedAttributesQuery|Orm\\Zed\\Cms\\Persistence\\SpyCmsPageStoreQuery|Orm\\Zed\\Cms\\Persistence\\SpyCmsTemplateQuery|Orm\\Zed\\Cms\\Persistence\\SpyCmsVersionQuery|Orm\\Zed\\CompanyBusinessUnit\\Persistence\\SpyCompanyBusinessUnitQuery|Orm\\Zed\\CompanyRole\\Persistence\\SpyCompanyRoleQuery|Orm\\Zed\\CompanySupplier\\Persistence\\SpyCompanySupplierToProductQuery|Orm\\Zed\\CompanySupplier\\Persistence\\SpyCompanyTypeQuery|Orm\\Zed\\CompanyUnitAddress\\Persistence\\SpyCompanyUnitAddressQuery|Orm\\Zed\\CompanyUser\\Persistence\\SpyCompanyUserQuery|Orm\\Zed\\Company\\Persistence\\SpyCompanyQuery|Orm\\Zed\\Company\\Persistence\\SpyCompanyStoreQuery|Orm\\Zed\\Content\\Persistence\\SpyContentLocalizedQuery|Orm\\Zed\\Currency\\Persistence\\SpyCurrencyQuery|Orm\\Zed\\Customer\\Persistence\\SpyCustomerQuery|Orm\\Zed\\Dataset\\Persistence\\SpyDatasetLocalizedAttributesQuery|Orm\\Zed\\DiscountPromotion\\Persistence\\SpyDiscountPromotionQuery|Orm\\Zed\\Discount\\Persistence\\SpyDiscountAmountQuery|Orm\\Zed\\Discount\\Persistence\\SpyDiscountQuery|Orm\\Zed\\Discount\\Persistence\\SpyDiscountStoreQuery|Orm\\Zed\\Discount\\Persistence\\SpyDiscountVoucherPoolQuery|Orm\\Zed\\Discount\\Persistence\\SpyDiscountVoucherQuery|Orm\\Zed\\FileManager\\Persistence\\SpyFileDirectoryLocalizedAttributesQuery|Orm\\Zed\\FileManager\\Persistence\\SpyFileLocalizedAttributesQuery|Orm\\Zed\\GiftCard\\Persistence\\SpyGiftCardProductAbstractConfigurationLinkQuery|Orm\\Zed\\GiftCard\\Persistence\\SpyGiftCardProductConfigurationLinkQuery|Orm\\Zed\\Glossary\\Persistence\\SpyGlossaryTranslationQuery|Orm\\Zed\\MerchantRelationshipSalesOrderThreshold\\Persistence\\SpyMerchantRelationshipSalesOrderThresholdQuery|Orm\\Zed\\MerchantRelationship\\Persistence\\SpyMerchantRelationshipQuery|Orm\\Zed\\MerchantRelationship\\Persistence\\SpyMerchantRelationshipToCompanyBusinessUnitQuery|Orm\\Zed\\MerchantStock\\Persistence\\SpyMerchantStockQuery|Orm\\Zed\\Merchant\\Persistence\\SpyMerchantQuery|Orm\\Zed\\Navigation\\Persistence\\SpyNavigationNodeLocalizedAttributesQuery|Orm\\Zed\\Oms\\Persistence\\SpyOmsProductReservationQuery|Orm\\Zed\\Payment\\Persistence\\SpyPaymentMethodStoreQuery|Orm\\Zed\\Payment\\Persistence\\SpyPaymentProviderQuery|Orm\\Zed\\PriceProductMerchantRelationship\\Persistence\\SpyPriceProductMerchantRelationshipQuery|Orm\\Zed\\PriceProductOffer\\Persistence\\SpyPriceProductOfferQuery|Orm\\Zed\\PriceProductSchedule\\Persistence\\SpyPriceProductScheduleQuery|Orm\\Zed\\PriceProduct\\Persistence\\SpyPriceProductQuery|Orm\\Zed\\PriceProduct\\Persistence\\SpyPriceProductStoreQuery|Orm\\Zed\\PriceProduct\\Persistence\\SpyPriceTypeQuery|Orm\\Zed\\ProductAlternative\\Persistence\\SpyProductAlternativeQuery|Orm\\Zed\\ProductAttribute\\Persistence\\SpyProductManagementAttributeValueTranslationQuery|Orm\\Zed\\ProductBundle\\Persistence\\SpyProductBundleQuery|Orm\\Zed\\ProductCategory\\Persistence\\SpyProductCategoryQuery|Orm\\Zed\\ProductCustomerPermission\\Persistence\\SpyProductCustomerPermissionQuery|Orm\\Zed\\ProductDiscontinued\\Persistence\\SpyProductDiscontinuedNoteQuery|Orm\\Zed\\ProductDiscontinued\\Persistence\\SpyProductDiscontinuedQuery|Orm\\Zed\\ProductGroup\\Persistence\\SpyProductAbstractGroupQuery|Orm\\Zed\\ProductImage\\Persistence\\SpyProductImageSetQuery|Orm\\Zed\\ProductLabel\\Persistence\\SpyProductLabelLocalizedAttributesQuery|Orm\\Zed\\ProductLabel\\Persistence\\SpyProductLabelProductAbstractQuery|Orm\\Zed\\ProductList\\Persistence\\SpyProductListProductConcreteQuery|Orm\\Zed\\ProductList\\Persistence\\SpyProductListQuery|Orm\\Zed\\ProductMeasurementUnit\\Persistence\\SpyProductMeasurementBaseUnitQuery|Orm\\Zed\\ProductMeasurementUnit\\Persistence\\SpyProductMeasurementSalesUnitQuery|Orm\\Zed\\ProductMeasurementUnit\\Persistence\\SpyProductMeasurementSalesUnitStoreQuery|Orm\\Zed\\ProductMeasurementUnit\\Persistence\\SpyProductMeasurementUnitQuery|Orm\\Zed\\ProductMerchantConnector\\Persistence\\SpyProductAbstractMerchantQuery|Orm\\Zed\\ProductOfferStock\\Persistence\\SpyProductOfferStockQuery|Orm\\Zed\\ProductOfferValidity\\Persistence\\SpyProductOfferValidityQuery|Orm\\Zed\\ProductOffer\\Persistence\\SpyProductOfferQuery|Orm\\Zed\\ProductOffer\\Persistence\\SpyProductOfferStoreQuery|Orm\\Zed\\ProductOption\\Persistence\\SpyProductAbstractProductOptionGroupQuery|Orm\\Zed\\ProductOption\\Persistence\\SpyProductOptionGroupQuery|Orm\\Zed\\ProductOption\\Persistence\\SpyProductOptionValuePriceQuery|Orm\\Zed\\ProductPackagingUnit\\Persistence\\SpyProductPackagingUnitQuery|Orm\\Zed\\ProductQuantity\\Persistence\\SpyProductQuantityQuery|Orm\\Zed\\ProductRelation\\Persistence\\SpyProductRelationProductAbstractQuery|Orm\\Zed\\ProductRelation\\Persistence\\SpyProductRelationQuery|Orm\\Zed\\ProductRelation\\Persistence\\SpyProductRelationStoreQuery|Orm\\Zed\\ProductRelation\\Persistence\\SpyProductRelationTypeQuery|Orm\\Zed\\ProductReview\\Persistence\\SpyProductReviewQuery|Orm\\Zed\\ProductSearch\\Persistence\\SpyProductSearchQuery|Orm\\Zed\\ProductSet\\Persistence\\SpyProductAbstractSetQuery|Orm\\Zed\\ProductSet\\Persistence\\SpyProductSetDataQuery|Orm\\Zed\\ProductValidity\\Persistence\\SpyProductValidityQuery|Orm\\Zed\\Product\\Persistence\\SpyProductAbstractLocalizedAttributesQuery|Orm\\Zed\\Product\\Persistence\\SpyProductAbstractQuery|Orm\\Zed\\Product\\Persistence\\SpyProductAbstractStoreQuery|Orm\\Zed\\Product\\Persistence\\SpyProductLocalizedAttributesQuery|Orm\\Zed\\Product\\Persistence\\SpyProductQuery|Orm\\Zed\\Quote\\Persistence\\SpyQuoteQuery|Orm\\Zed\\SalesOrderThreshold\\Persistence\\SpySalesOrderThresholdQuery|Orm\\Zed\\Sales\\Persistence\\SpySalesOrderQuery|Orm\\Zed\\SharedCart\\Persistence\\SpyQuotePermissionGroupQuery|Orm\\Zed\\Shipment\\Persistence\\SpyShipmentCarrierQuery|Orm\\Zed\\Shipment\\Persistence\\SpyShipmentMethodPriceQuery|Orm\\Zed\\Shipment\\Persistence\\SpyShipmentMethodStoreQuery|Orm\\Zed\\ShoppingListProductOptionConnector\\Persistence\\SpyShoppingListProductOptionQuery|Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery|Orm\\Zed\\Stock\\Persistence\\SpyStockStoreQuery|Orm\\Zed\\Store\\Persistence\\SpyStoreQuery|Orm\\Zed\\Tax\\Persistence\\SpyTaxSetQuery|Orm\\Zed\\Touch\\Persistence\\SpyTouchSearchQuery|Orm\\Zed\\Touch\\Persistence\\SpyTouchStorageQuery|Orm\\Zed\\Url\\Persistence\\SpyUrlQuery|Orm\\Zed\\User\\Persistence\\SpyUserQuery|Orm\\Zed\\Wishlist\\Persistence\\SpyWishlistItemQuery' does not match the declared return type 'Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery' for Spryker\\Zed\\Stock\\Persistence\\StockRepository::queryStockProductByProductAbstractSkuAndStore",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockRepository.php",
            "snippet": "        return $this->getFactory()\n            ->createStockProductQuery()\n            ->useSpyProductQuery(null, Criteria::LEFT_JOIN)\n                ->useSpyProductAbstractQuery(null, Criteria::LEFT_JOIN)\n                    ->filterBySku($abstractSku)\n                ->endUse()\n            ->endUse()\n            ->useStockQuery(null, Criteria::LEFT_JOIN)\n                ->filterByIsActive(true)\n                ->useStockStoreQuery(null, Criteria::LEFT_JOIN)\n                    ->useStoreQuery(null, Criteria::LEFT_JOIN)\n                        ->filterByName($storeTransfer->getName())\n                    ->endUse()\n                ->endUse()\n            ->endUse();",
            "selected_text": "$this->getFactory()\n            ->createStockProductQuery()\n            ->useSpyProductQuery(null, Criteria::LEFT_JOIN)\n                ->useSpyProductAbstractQuery(null, Criteria::LEFT_JOIN)\n                    ->filterBySku($abstractSku)\n                ->endUse()\n            ->endUse()\n            ->useStockQuery(null, Criteria::LEFT_JOIN)\n                ->filterByIsActive(true)\n                ->useStockStoreQuery(null, Criteria::LEFT_JOIN)\n                    ->useStoreQuery(null, Criteria::LEFT_JOIN)\n                        ->filterByName($storeTransfer->getName())\n                    ->endUse()\n                ->endUse()\n            ->endUse()",
            "error_level": 6,
            "shortcode": 128
        },
        {
            "severity": "error",
            "line_from": 261,
            "line_to": 261,
            "type": "InvalidReturnType",
            "message": "The declared return type 'Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery' for Spryker\\Zed\\Stock\\Persistence\\StockRepository::queryStockProductByProductConcreteSkuAndStore is incorrect, got 'Orm\\Zed\\AvailabilityNotification\\Persistence\\SpyAvailabilityNotificationSubscriptionQuery|Orm\\Zed\\Availability\\Persistence\\SpyAvailabilityAbstractQuery|Orm\\Zed\\Availability\\Persistence\\SpyAvailabilityQuery|Orm\\Zed\\CategoryImage\\Persistence\\SpyCategoryImageSetQuery|Orm\\Zed\\Category\\Persistence\\SpyCategoryAttributeQuery|Orm\\Zed\\CmsBlockCategoryConnector\\Persistence\\SpyCmsBlockCategoryConnectorQuery|Orm\\Zed\\CmsBlockProductConnector\\Persistence\\SpyCmsBlockProductConnectorQuery|Orm\\Zed\\CmsBlock\\Persistence\\SpyCmsBlockGlossaryKeyMappingQuery|Orm\\Zed\\CmsBlock\\Persistence\\SpyCmsBlockStoreQuery|Orm\\Zed\\CmsBlock\\Persistence\\SpyCmsBlockTemplateQuery|Orm\\Zed\\CmsSlotBlock\\Persistence\\SpyCmsSlotBlockQuery|Orm\\Zed\\Cms\\Persistence\\SpyCmsGlossaryKeyMappingQuery|Orm\\Zed\\Cms\\Persistence\\SpyCmsPageLocalizedAttributesQuery|Orm\\Zed\\Cms\\Persistence\\SpyCmsPageStoreQuery|Orm\\Zed\\Cms\\Persistence\\SpyCmsTemplateQuery|Orm\\Zed\\Cms\\Persistence\\SpyCmsVersionQuery|Orm\\Zed\\CompanyBusinessUnit\\Persistence\\SpyCompanyBusinessUnitQuery|Orm\\Zed\\CompanyRole\\Persistence\\SpyCompanyRoleQuery|Orm\\Zed\\CompanySupplier\\Persistence\\SpyCompanySupplierToProductQuery|Orm\\Zed\\CompanySupplier\\Persistence\\SpyCompanyTypeQuery|Orm\\Zed\\CompanyUnitAddress\\Persistence\\SpyCompanyUnitAddressQuery|Orm\\Zed\\CompanyUser\\Persistence\\SpyCompanyUserQuery|Orm\\Zed\\Company\\Persistence\\SpyCompanyQuery|Orm\\Zed\\Company\\Persistence\\SpyCompanyStoreQuery|Orm\\Zed\\Content\\Persistence\\SpyContentLocalizedQuery|Orm\\Zed\\Currency\\Persistence\\SpyCurrencyQuery|Orm\\Zed\\Customer\\Persistence\\SpyCustomerQuery|Orm\\Zed\\Dataset\\Persistence\\SpyDatasetLocalizedAttributesQuery|Orm\\Zed\\DiscountPromotion\\Persistence\\SpyDiscountPromotionQuery|Orm\\Zed\\Discount\\Persistence\\SpyDiscountAmountQuery|Orm\\Zed\\Discount\\Persistence\\SpyDiscountQuery|Orm\\Zed\\Discount\\Persistence\\SpyDiscountStoreQuery|Orm\\Zed\\Discount\\Persistence\\SpyDiscountVoucherPoolQuery|Orm\\Zed\\Discount\\Persistence\\SpyDiscountVoucherQuery|Orm\\Zed\\FileManager\\Persistence\\SpyFileDirectoryLocalizedAttributesQuery|Orm\\Zed\\FileManager\\Persistence\\SpyFileLocalizedAttributesQuery|Orm\\Zed\\GiftCard\\Persistence\\SpyGiftCardProductAbstractConfigurationLinkQuery|Orm\\Zed\\GiftCard\\Persistence\\SpyGiftCardProductConfigurationLinkQuery|Orm\\Zed\\Glossary\\Persistence\\SpyGlossaryTranslationQuery|Orm\\Zed\\MerchantRelationshipSalesOrderThreshold\\Persistence\\SpyMerchantRelationshipSalesOrderThresholdQuery|Orm\\Zed\\MerchantRelationship\\Persistence\\SpyMerchantRelationshipQuery|Orm\\Zed\\MerchantRelationship\\Persistence\\SpyMerchantRelationshipToCompanyBusinessUnitQuery|Orm\\Zed\\MerchantStock\\Persistence\\SpyMerchantStockQuery|Orm\\Zed\\Merchant\\Persistence\\SpyMerchantQuery|Orm\\Zed\\Navigation\\Persistence\\SpyNavigationNodeLocalizedAttributesQuery|Orm\\Zed\\Oms\\Persistence\\SpyOmsProductReservationQuery|Orm\\Zed\\Payment\\Persistence\\SpyPaymentMethodStoreQuery|Orm\\Zed\\Payment\\Persistence\\SpyPaymentProviderQuery|Orm\\Zed\\PriceProductMerchantRelationship\\Persistence\\SpyPriceProductMerchantRelationshipQuery|Orm\\Zed\\PriceProductOffer\\Persistence\\SpyPriceProductOfferQuery|Orm\\Zed\\PriceProductSchedule\\Persistence\\SpyPriceProductScheduleQuery|Orm\\Zed\\PriceProduct\\Persistence\\SpyPriceProductQuery|Orm\\Zed\\PriceProduct\\Persistence\\SpyPriceProductStoreQuery|Orm\\Zed\\PriceProduct\\Persistence\\SpyPriceTypeQuery|Orm\\Zed\\ProductAlternative\\Persistence\\SpyProductAlternativeQuery|Orm\\Zed\\ProductAttribute\\Persistence\\SpyProductManagementAttributeValueTranslationQuery|Orm\\Zed\\ProductBundle\\Persistence\\SpyProductBundleQuery|Orm\\Zed\\ProductCategory\\Persistence\\SpyProductCategoryQuery|Orm\\Zed\\ProductCustomerPermission\\Persistence\\SpyProductCustomerPermissionQuery|Orm\\Zed\\ProductDiscontinued\\Persistence\\SpyProductDiscontinuedNoteQuery|Orm\\Zed\\ProductDiscontinued\\Persistence\\SpyProductDiscontinuedQuery|Orm\\Zed\\ProductGroup\\Persistence\\SpyProductAbstractGroupQuery|Orm\\Zed\\ProductImage\\Persistence\\SpyProductImageSetQuery|Orm\\Zed\\ProductLabel\\Persistence\\SpyProductLabelLocalizedAttributesQuery|Orm\\Zed\\ProductLabel\\Persistence\\SpyProductLabelProductAbstractQuery|Orm\\Zed\\ProductList\\Persistence\\SpyProductListProductConcreteQuery|Orm\\Zed\\ProductList\\Persistence\\SpyProductListQuery|Orm\\Zed\\ProductMeasurementUnit\\Persistence\\SpyProductMeasurementBaseUnitQuery|Orm\\Zed\\ProductMeasurementUnit\\Persistence\\SpyProductMeasurementSalesUnitQuery|Orm\\Zed\\ProductMeasurementUnit\\Persistence\\SpyProductMeasurementSalesUnitStoreQuery|Orm\\Zed\\ProductMeasurementUnit\\Persistence\\SpyProductMeasurementUnitQuery|Orm\\Zed\\ProductMerchantConnector\\Persistence\\SpyProductAbstractMerchantQuery|Orm\\Zed\\ProductOfferStock\\Persistence\\SpyProductOfferStockQuery|Orm\\Zed\\ProductOfferValidity\\Persistence\\SpyProductOfferValidityQuery|Orm\\Zed\\ProductOffer\\Persistence\\SpyProductOfferQuery|Orm\\Zed\\ProductOffer\\Persistence\\SpyProductOfferStoreQuery|Orm\\Zed\\ProductOption\\Persistence\\SpyProductAbstractProductOptionGroupQuery|Orm\\Zed\\ProductOption\\Persistence\\SpyProductOptionGroupQuery|Orm\\Zed\\ProductOption\\Persistence\\SpyProductOptionValuePriceQuery|Orm\\Zed\\ProductPackagingUnit\\Persistence\\SpyProductPackagingUnitQuery|Orm\\Zed\\ProductQuantity\\Persistence\\SpyProductQuantityQuery|Orm\\Zed\\ProductRelation\\Persistence\\SpyProductRelationProductAbstractQuery|Orm\\Zed\\ProductRelation\\Persistence\\SpyProductRelationQuery|Orm\\Zed\\ProductRelation\\Persistence\\SpyProductRelationStoreQuery|Orm\\Zed\\ProductRelation\\Persistence\\SpyProductRelationTypeQuery|Orm\\Zed\\ProductReview\\Persistence\\SpyProductReviewQuery|Orm\\Zed\\ProductSearch\\Persistence\\SpyProductSearchQuery|Orm\\Zed\\ProductSet\\Persistence\\SpyProductAbstractSetQuery|Orm\\Zed\\ProductSet\\Persistence\\SpyProductSetDataQuery|Orm\\Zed\\ProductValidity\\Persistence\\SpyProductValidityQuery|Orm\\Zed\\Product\\Persistence\\SpyProductAbstractLocalizedAttributesQuery|Orm\\Zed\\Product\\Persistence\\SpyProductAbstractQuery|Orm\\Zed\\Product\\Persistence\\SpyProductAbstractStoreQuery|Orm\\Zed\\Product\\Persistence\\SpyProductLocalizedAttributesQuery|Orm\\Zed\\Product\\Persistence\\SpyProductQuery|Orm\\Zed\\Quote\\Persistence\\SpyQuoteQuery|Orm\\Zed\\SalesOrderThreshold\\Persistence\\SpySalesOrderThresholdQuery|Orm\\Zed\\Sales\\Persistence\\SpySalesOrderQuery|Orm\\Zed\\SharedCart\\Persistence\\SpyQuotePermissionGroupQuery|Orm\\Zed\\Shipment\\Persistence\\SpyShipmentCarrierQuery|Orm\\Zed\\Shipment\\Persistence\\SpyShipmentMethodPriceQuery|Orm\\Zed\\Shipment\\Persistence\\SpyShipmentMethodStoreQuery|Orm\\Zed\\ShoppingListProductOptionConnector\\Persistence\\SpyShoppingListProductOptionQuery|Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery|Orm\\Zed\\Stock\\Persistence\\SpyStockStoreQuery|Orm\\Zed\\Store\\Persistence\\SpyStoreQuery|Orm\\Zed\\Tax\\Persistence\\SpyTaxSetQuery|Orm\\Zed\\Touch\\Persistence\\SpyTouchSearchQuery|Orm\\Zed\\Touch\\Persistence\\SpyTouchStorageQuery|Orm\\Zed\\Url\\Persistence\\SpyUrlQuery|Orm\\Zed\\User\\Persistence\\SpyUserQuery|Orm\\Zed\\Wishlist\\Persistence\\SpyWishlistItemQuery'",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockRepository.php",
            "snippet": "     * @return \\Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery",
            "selected_text": "\\Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery",
            "error_level": 6,
            "shortcode": 11
        },
        {
            "severity": "error",
            "line_from": 265,
            "line_to": 277,
            "type": "InvalidReturnStatement",
            "message": "The inferred type 'Orm\\Zed\\AvailabilityNotification\\Persistence\\SpyAvailabilityNotificationSubscriptionQuery|Orm\\Zed\\Availability\\Persistence\\SpyAvailabilityAbstractQuery|Orm\\Zed\\Availability\\Persistence\\SpyAvailabilityQuery|Orm\\Zed\\CategoryImage\\Persistence\\SpyCategoryImageSetQuery|Orm\\Zed\\Category\\Persistence\\SpyCategoryAttributeQuery|Orm\\Zed\\CmsBlockCategoryConnector\\Persistence\\SpyCmsBlockCategoryConnectorQuery|Orm\\Zed\\CmsBlockProductConnector\\Persistence\\SpyCmsBlockProductConnectorQuery|Orm\\Zed\\CmsBlock\\Persistence\\SpyCmsBlockGlossaryKeyMappingQuery|Orm\\Zed\\CmsBlock\\Persistence\\SpyCmsBlockStoreQuery|Orm\\Zed\\CmsBlock\\Persistence\\SpyCmsBlockTemplateQuery|Orm\\Zed\\CmsSlotBlock\\Persistence\\SpyCmsSlotBlockQuery|Orm\\Zed\\Cms\\Persistence\\SpyCmsGlossaryKeyMappingQuery|Orm\\Zed\\Cms\\Persistence\\SpyCmsPageLocalizedAttributesQuery|Orm\\Zed\\Cms\\Persistence\\SpyCmsPageStoreQuery|Orm\\Zed\\Cms\\Persistence\\SpyCmsTemplateQuery|Orm\\Zed\\Cms\\Persistence\\SpyCmsVersionQuery|Orm\\Zed\\CompanyBusinessUnit\\Persistence\\SpyCompanyBusinessUnitQuery|Orm\\Zed\\CompanyRole\\Persistence\\SpyCompanyRoleQuery|Orm\\Zed\\CompanySupplier\\Persistence\\SpyCompanySupplierToProductQuery|Orm\\Zed\\CompanySupplier\\Persistence\\SpyCompanyTypeQuery|Orm\\Zed\\CompanyUnitAddress\\Persistence\\SpyCompanyUnitAddressQuery|Orm\\Zed\\CompanyUser\\Persistence\\SpyCompanyUserQuery|Orm\\Zed\\Company\\Persistence\\SpyCompanyQuery|Orm\\Zed\\Company\\Persistence\\SpyCompanyStoreQuery|Orm\\Zed\\Content\\Persistence\\SpyContentLocalizedQuery|Orm\\Zed\\Currency\\Persistence\\SpyCurrencyQuery|Orm\\Zed\\Customer\\Persistence\\SpyCustomerQuery|Orm\\Zed\\Dataset\\Persistence\\SpyDatasetLocalizedAttributesQuery|Orm\\Zed\\DiscountPromotion\\Persistence\\SpyDiscountPromotionQuery|Orm\\Zed\\Discount\\Persistence\\SpyDiscountAmountQuery|Orm\\Zed\\Discount\\Persistence\\SpyDiscountQuery|Orm\\Zed\\Discount\\Persistence\\SpyDiscountStoreQuery|Orm\\Zed\\Discount\\Persistence\\SpyDiscountVoucherPoolQuery|Orm\\Zed\\Discount\\Persistence\\SpyDiscountVoucherQuery|Orm\\Zed\\FileManager\\Persistence\\SpyFileDirectoryLocalizedAttributesQuery|Orm\\Zed\\FileManager\\Persistence\\SpyFileLocalizedAttributesQuery|Orm\\Zed\\GiftCard\\Persistence\\SpyGiftCardProductAbstractConfigurationLinkQuery|Orm\\Zed\\GiftCard\\Persistence\\SpyGiftCardProductConfigurationLinkQuery|Orm\\Zed\\Glossary\\Persistence\\SpyGlossaryTranslationQuery|Orm\\Zed\\MerchantRelationshipSalesOrderThreshold\\Persistence\\SpyMerchantRelationshipSalesOrderThresholdQuery|Orm\\Zed\\MerchantRelationship\\Persistence\\SpyMerchantRelationshipQuery|Orm\\Zed\\MerchantRelationship\\Persistence\\SpyMerchantRelationshipToCompanyBusinessUnitQuery|Orm\\Zed\\MerchantStock\\Persistence\\SpyMerchantStockQuery|Orm\\Zed\\Merchant\\Persistence\\SpyMerchantQuery|Orm\\Zed\\Navigation\\Persistence\\SpyNavigationNodeLocalizedAttributesQuery|Orm\\Zed\\Oms\\Persistence\\SpyOmsProductReservationQuery|Orm\\Zed\\Payment\\Persistence\\SpyPaymentMethodStoreQuery|Orm\\Zed\\Payment\\Persistence\\SpyPaymentProviderQuery|Orm\\Zed\\PriceProductMerchantRelationship\\Persistence\\SpyPriceProductMerchantRelationshipQuery|Orm\\Zed\\PriceProductOffer\\Persistence\\SpyPriceProductOfferQuery|Orm\\Zed\\PriceProductSchedule\\Persistence\\SpyPriceProductScheduleQuery|Orm\\Zed\\PriceProduct\\Persistence\\SpyPriceProductQuery|Orm\\Zed\\PriceProduct\\Persistence\\SpyPriceProductStoreQuery|Orm\\Zed\\PriceProduct\\Persistence\\SpyPriceTypeQuery|Orm\\Zed\\ProductAlternative\\Persistence\\SpyProductAlternativeQuery|Orm\\Zed\\ProductAttribute\\Persistence\\SpyProductManagementAttributeValueTranslationQuery|Orm\\Zed\\ProductBundle\\Persistence\\SpyProductBundleQuery|Orm\\Zed\\ProductCategory\\Persistence\\SpyProductCategoryQuery|Orm\\Zed\\ProductCustomerPermission\\Persistence\\SpyProductCustomerPermissionQuery|Orm\\Zed\\ProductDiscontinued\\Persistence\\SpyProductDiscontinuedNoteQuery|Orm\\Zed\\ProductDiscontinued\\Persistence\\SpyProductDiscontinuedQuery|Orm\\Zed\\ProductGroup\\Persistence\\SpyProductAbstractGroupQuery|Orm\\Zed\\ProductImage\\Persistence\\SpyProductImageSetQuery|Orm\\Zed\\ProductLabel\\Persistence\\SpyProductLabelLocalizedAttributesQuery|Orm\\Zed\\ProductLabel\\Persistence\\SpyProductLabelProductAbstractQuery|Orm\\Zed\\ProductList\\Persistence\\SpyProductListProductConcreteQuery|Orm\\Zed\\ProductList\\Persistence\\SpyProductListQuery|Orm\\Zed\\ProductMeasurementUnit\\Persistence\\SpyProductMeasurementBaseUnitQuery|Orm\\Zed\\ProductMeasurementUnit\\Persistence\\SpyProductMeasurementSalesUnitQuery|Orm\\Zed\\ProductMeasurementUnit\\Persistence\\SpyProductMeasurementSalesUnitStoreQuery|Orm\\Zed\\ProductMeasurementUnit\\Persistence\\SpyProductMeasurementUnitQuery|Orm\\Zed\\ProductMerchantConnector\\Persistence\\SpyProductAbstractMerchantQuery|Orm\\Zed\\ProductOfferStock\\Persistence\\SpyProductOfferStockQuery|Orm\\Zed\\ProductOfferValidity\\Persistence\\SpyProductOfferValidityQuery|Orm\\Zed\\ProductOffer\\Persistence\\SpyProductOfferQuery|Orm\\Zed\\ProductOffer\\Persistence\\SpyProductOfferStoreQuery|Orm\\Zed\\ProductOption\\Persistence\\SpyProductAbstractProductOptionGroupQuery|Orm\\Zed\\ProductOption\\Persistence\\SpyProductOptionGroupQuery|Orm\\Zed\\ProductOption\\Persistence\\SpyProductOptionValuePriceQuery|Orm\\Zed\\ProductPackagingUnit\\Persistence\\SpyProductPackagingUnitQuery|Orm\\Zed\\ProductQuantity\\Persistence\\SpyProductQuantityQuery|Orm\\Zed\\ProductRelation\\Persistence\\SpyProductRelationProductAbstractQuery|Orm\\Zed\\ProductRelation\\Persistence\\SpyProductRelationQuery|Orm\\Zed\\ProductRelation\\Persistence\\SpyProductRelationStoreQuery|Orm\\Zed\\ProductRelation\\Persistence\\SpyProductRelationTypeQuery|Orm\\Zed\\ProductReview\\Persistence\\SpyProductReviewQuery|Orm\\Zed\\ProductSearch\\Persistence\\SpyProductSearchQuery|Orm\\Zed\\ProductSet\\Persistence\\SpyProductAbstractSetQuery|Orm\\Zed\\ProductSet\\Persistence\\SpyProductSetDataQuery|Orm\\Zed\\ProductValidity\\Persistence\\SpyProductValidityQuery|Orm\\Zed\\Product\\Persistence\\SpyProductAbstractLocalizedAttributesQuery|Orm\\Zed\\Product\\Persistence\\SpyProductAbstractQuery|Orm\\Zed\\Product\\Persistence\\SpyProductAbstractStoreQuery|Orm\\Zed\\Product\\Persistence\\SpyProductLocalizedAttributesQuery|Orm\\Zed\\Product\\Persistence\\SpyProductQuery|Orm\\Zed\\Quote\\Persistence\\SpyQuoteQuery|Orm\\Zed\\SalesOrderThreshold\\Persistence\\SpySalesOrderThresholdQuery|Orm\\Zed\\Sales\\Persistence\\SpySalesOrderQuery|Orm\\Zed\\SharedCart\\Persistence\\SpyQuotePermissionGroupQuery|Orm\\Zed\\Shipment\\Persistence\\SpyShipmentCarrierQuery|Orm\\Zed\\Shipment\\Persistence\\SpyShipmentMethodPriceQuery|Orm\\Zed\\Shipment\\Persistence\\SpyShipmentMethodStoreQuery|Orm\\Zed\\ShoppingListProductOptionConnector\\Persistence\\SpyShoppingListProductOptionQuery|Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery|Orm\\Zed\\Stock\\Persistence\\SpyStockStoreQuery|Orm\\Zed\\Store\\Persistence\\SpyStoreQuery|Orm\\Zed\\Tax\\Persistence\\SpyTaxSetQuery|Orm\\Zed\\Touch\\Persistence\\SpyTouchSearchQuery|Orm\\Zed\\Touch\\Persistence\\SpyTouchStorageQuery|Orm\\Zed\\Url\\Persistence\\SpyUrlQuery|Orm\\Zed\\User\\Persistence\\SpyUserQuery|Orm\\Zed\\Wishlist\\Persistence\\SpyWishlistItemQuery' does not match the declared return type 'Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery' for Spryker\\Zed\\Stock\\Persistence\\StockRepository::queryStockProductByProductConcreteSkuAndStore",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockRepository.php",
            "snippet": "        return $this->getFactory()\n            ->createStockProductQuery()\n            ->useSpyProductQuery(null, Criteria::LEFT_JOIN)\n                ->filterBySku($concreteSku)\n            ->endUse()\n            ->useStockQuery(null, Criteria::LEFT_JOIN)\n                ->filterByIsActive(true)\n                ->useStockStoreQuery(null, Criteria::LEFT_JOIN)\n                    ->useStoreQuery(null, Criteria::LEFT_JOIN)\n                        ->filterByName($storeTransfer->getName())\n                    ->endUse()\n                ->endUse()\n            ->endUse();",
            "selected_text": "$this->getFactory()\n            ->createStockProductQuery()\n            ->useSpyProductQuery(null, Criteria::LEFT_JOIN)\n                ->filterBySku($concreteSku)\n            ->endUse()\n            ->useStockQuery(null, Criteria::LEFT_JOIN)\n                ->filterByIsActive(true)\n                ->useStockStoreQuery(null, Criteria::LEFT_JOIN)\n                    ->useStoreQuery(null, Criteria::LEFT_JOIN)\n                        ->filterByName($storeTransfer->getName())\n                    ->endUse()\n                ->endUse()\n            ->endUse()",
            "error_level": 6,
            "shortcode": 128
        },
        {
            "severity": "error",
            "line_from": 290,
            "line_to": 298,
            "type": "UndefinedDocblockClass",
            "message": "Docblock-defined class or interface Orm\\Zed\\ProductMerchantConnector\\Persistence\\SpyProductAbstractMerchantQuery does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockRepository.php",
            "snippet": "        $query = $this->getFactory()\n            ->getStoreQuery()\n            ->useStockStoreQuery(null, Criteria::LEFT_JOIN)\n                ->useStockQuery(null, Criteria::LEFT_JOIN)\n                    ->useStockProductQuery(null, Criteria::LEFT_JOIN)\n                        ->useSpyProductQuery(null, Criteria::LEFT_JOIN)\n                            ->filterBySku($sku)\n                        ->endUse()\n                    ->endUse()",
            "selected_text": "$this->getFactory()\n            ->getStoreQuery()\n            ->useStockStoreQuery(null, Criteria::LEFT_JOIN)\n                ->useStockQuery(null, Criteria::LEFT_JOIN)\n                    ->useStockProductQuery(null, Criteria::LEFT_JOIN)\n                        ->useSpyProductQuery(null, Criteria::LEFT_JOIN)\n                            ->filterBySku($sku)\n                        ->endUse()\n                    ->endUse()",
            "error_level": -1,
            "shortcode": 200
        }
    ],
    "warning": [
        {
            "severity": "info",
            "line_from": 76,
            "line_to": 76,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\DecimalObject\\Decimal::add cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Calculator.php",
            "snippet": "            $quantity = $quantity->add($stockProductTransfer->getQuantity());",
            "selected_text": "$stockProductTransfer->getQuantity()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 132,
            "line_to": 132,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\Stock\\StockReaderInterface::getStockTypeIdByName cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Writer.php",
            "snippet": "        $idStockType = $this->stockReader->getStockTypeIdByName($transferStockProduct->getStockType());",
            "selected_text": "$transferStockProduct->getStockType()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 133,
            "line_to": 133,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\StockProduct\\StockProductReaderInterface::getProductConcreteIdBySku cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Writer.php",
            "snippet": "        $idProduct = $this->stockProductReader->getProductConcreteIdBySku($transferStockProduct->getSku());",
            "selected_text": "$transferStockProduct->getSku()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 137,
            "line_to": 137,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\Model\\Writer::handleStockUpdatePlugins cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Writer.php",
            "snippet": "        $this->handleStockUpdatePlugins($transferStockProduct->getSku());",
            "selected_text": "$transferStockProduct->getSku()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 163,
            "line_to": 163,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\StockProduct\\StockProductReaderInterface::getProductConcreteIdBySku cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Writer.php",
            "snippet": "        $idProduct = $this->stockProductReader->getProductConcreteIdBySku($transferStockProduct->getSku());",
            "selected_text": "$transferStockProduct->getSku()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 164,
            "line_to": 164,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\Stock\\StockReaderInterface::getStockTypeIdByName cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Writer.php",
            "snippet": "        $idStock = $this->stockReader->getStockTypeIdByName($transferStockProduct->getStockType());",
            "selected_text": "$transferStockProduct->getStockType()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 165,
            "line_to": 165,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\StockProduct\\StockProductReaderInterface::getStockProductById cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Writer.php",
            "snippet": "        $stockProductEntity = $this->stockProductReader->getStockProductById($transferStockProduct->getIdStockProduct());",
            "selected_text": "$transferStockProduct->getIdStockProduct()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 171,
            "line_to": 171,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Orm\\Zed\\Stock\\Persistence\\SpyStockProduct::setIsNeverOutOfStock cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Writer.php",
            "snippet": "            ->setIsNeverOutOfStock($transferStockProduct->getIsNeverOutOfStock())",
            "selected_text": "$transferStockProduct->getIsNeverOutOfStock()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 175,
            "line_to": 175,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\Model\\Writer::handleStockUpdatePlugins cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Writer.php",
            "snippet": "        $this->handleStockUpdatePlugins($transferStockProduct->getSku());",
            "selected_text": "$transferStockProduct->getSku()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 287,
            "line_to": 287,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Orm\\Zed\\Stock\\Persistence\\SpyStockProduct::setIsNeverOutOfStock cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Writer.php",
            "snippet": "            ->setIsNeverOutOfStock($transferStockProduct->getIsNeverOutOfStock())",
            "selected_text": "$transferStockProduct->getIsNeverOutOfStock()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 316,
            "line_to": 316,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\StockProduct\\StockProductReaderInterface::hasStockProduct cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Writer.php",
            "snippet": "            if (!$this->stockProductReader->hasStockProduct($stockTransfer->getSku(), $stockTransfer->getStockType())) {",
            "selected_text": "$stockTransfer->getSku()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 316,
            "line_to": 316,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Stock\\Business\\StockProduct\\StockProductReaderInterface::hasStockProduct cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Writer.php",
            "snippet": "            if (!$this->stockProductReader->hasStockProduct($stockTransfer->getSku(), $stockTransfer->getStockType())) {",
            "selected_text": "$stockTransfer->getStockType()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 321,
            "line_to": 321,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\StockProduct\\StockProductReaderInterface::getIdStockProduct cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Writer.php",
            "snippet": "                    $idStockProduct = $this->stockProductReader->getIdStockProduct($stockTransfer->getSku(), $stockTransfer->getStockType());",
            "selected_text": "$stockTransfer->getSku()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 321,
            "line_to": 321,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Stock\\Business\\StockProduct\\StockProductReaderInterface::getIdStockProduct cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Writer.php",
            "snippet": "                    $idStockProduct = $this->stockProductReader->getIdStockProduct($stockTransfer->getSku(), $stockTransfer->getStockType());",
            "selected_text": "$stockTransfer->getStockType()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 67,
            "line_to": 67,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Persistence\\StockEntityManagerInterface::addStockStoreRelations cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockCreator.php",
            "snippet": "                $stockTransfer->getIdStock(),",
            "selected_text": "$stockTransfer->getIdStock()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 68,
            "line_to": 68,
            "type": "PossiblyNullReference",
            "message": "Cannot call method getIdStores on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockCreator.php",
            "snippet": "                $stockTransfer->getStoreRelation()->getIdStores()",
            "selected_text": "getIdStores",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 88,
            "line_to": 88,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Stock\\Dependency\\Facade\\StockToTouchInterface::touchActive cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockCreator.php",
            "snippet": "            $stockTransfer->getIdStock()",
            "selected_text": "$stockTransfer->getIdStock()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 25,
            "line_to": 25,
            "type": "PossiblyNullArrayOffset",
            "message": "Cannot access value on variable $mapping[null|string] using possibly null offset null|string",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockMapper.php",
            "snippet": "            $mapping[$stockTransfer->getName()] = $this->getStoreNamesFromStoreRelation($stockTransfer->getStoreRelation());",
            "selected_text": "$mapping",
            "error_level": 3,
            "shortcode": 125
        },
        {
            "severity": "info",
            "line_from": 25,
            "line_to": 25,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\Stock\\StockMapper::getStoreNamesFromStoreRelation cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockMapper.php",
            "snippet": "            $mapping[$stockTransfer->getName()] = $this->getStoreNamesFromStoreRelation($stockTransfer->getStoreRelation());",
            "selected_text": "$stockTransfer->getStoreRelation()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 54,
            "line_to": 54,
            "type": "InvalidNullableReturnType",
            "message": "The declared return type 'string' for /media/mark/f42d91bd-14bc-4e71-936f-96ed99135be4/www/suite-nonsplit/project/vendor/spryker/spryker/bundles/stock/src/spryker/zed/stock/business/stock/stockmapper.php:54:1708:-:closure is not nullable, but 'null|string' contains null",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockMapper.php",
            "snippet": "        return array_map(function (StoreTransfer $storeTransfer): string {",
            "selected_text": "string",
            "error_level": 5,
            "shortcode": 144
        },
        {
            "severity": "info",
            "line_from": 55,
            "line_to": 55,
            "type": "NullableReturnStatement",
            "message": "The declared return type 'string' for /media/mark/f42d91bd-14bc-4e71-936f-96ed99135be4/www/suite-nonsplit/project/vendor/spryker/spryker/bundles/stock/src/spryker/zed/stock/business/stock/stockmapper.php:54:1708:-:closure is not nullable, but the function returns 'null|string'",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockMapper.php",
            "snippet": "            return $storeTransfer->getName();",
            "selected_text": "$storeTransfer->getName()",
            "error_level": 5,
            "shortcode": 139
        },
        {
            "severity": "info",
            "line_from": 68,
            "line_to": 68,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\Stock\\StockMapper::getStoreNamesFromStoreRelation cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockMapper.php",
            "snippet": "        $relatedStoreNames = $this->getStoreNamesFromStoreRelation($stockTransfer->getStoreRelation());",
            "selected_text": "$stockTransfer->getStoreRelation()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 71,
            "line_to": 71,
            "type": "PossiblyNullArrayOffset",
            "message": "Cannot access value on variable $storeStockMapping[null|string] using possibly null offset null|string",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockMapper.php",
            "snippet": "                $storeStockMapping[$storeTransfer->getName()][] = $stockTransfer->getName();",
            "selected_text": "$storeStockMapping",
            "error_level": 3,
            "shortcode": 125
        },
        {
            "severity": "info",
            "line_from": 88,
            "line_to": 88,
            "type": "PossiblyNullArrayOffset",
            "message": "Cannot access value on variable $storeNames[$storeName] using possibly null offset mixed|null|string",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockMapper.php",
            "snippet": "            $storeNames[$storeName] = $storeName;",
            "selected_text": "$storeNames",
            "error_level": 3,
            "shortcode": 125
        },
        {
            "severity": "info",
            "line_from": 68,
            "line_to": 68,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Persistence\\StockRepositoryInterface::getStockNamesForStore cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockReader.php",
            "snippet": "        $stockNames = $this->stockRepository->getStockNamesForStore($storeTransfer->getName());",
            "selected_text": "$storeTransfer->getName()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 115,
            "line_to": 115,
            "type": "InvalidNullableReturnType",
            "message": "The declared return type 'int' for Spryker\\Zed\\Stock\\Business\\Stock\\StockReader::getStockTypeIdByName is not nullable, but 'int|null' contains null",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockReader.php",
            "snippet": "     * @return int",
            "selected_text": "int",
            "error_level": 5,
            "shortcode": 144
        },
        {
            "severity": "info",
            "line_from": 125,
            "line_to": 125,
            "type": "NullableReturnStatement",
            "message": "The declared return type 'int' for Spryker\\Zed\\Stock\\Business\\Stock\\StockReader::getStockTypeIdByName is not nullable, but the function returns 'int|null'",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockReader.php",
            "snippet": "        return $stockTransfer->getIdStock();",
            "selected_text": "$stockTransfer->getIdStock()",
            "error_level": 5,
            "shortcode": 139
        },
        {
            "severity": "info",
            "line_from": 85,
            "line_to": 85,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\Stock\\StockStoreRelationshipUpdaterInterface::updateStockStoreRelationshipsForStock cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockUpdater.php",
            "snippet": "            $stockTransfer->getIdStock(),",
            "selected_text": "$stockTransfer->getIdStock()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 106,
            "line_to": 106,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Stock\\Dependency\\Facade\\StockToTouchInterface::touchActive cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockUpdater.php",
            "snippet": "            $stockTransfer->getIdStock()",
            "selected_text": "$stockTransfer->getIdStock()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 86,
            "line_to": 86,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Persistence\\StockQueryContainerInterface::queryStockByNeverOutOfStockAllTypes cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/StockProduct/StockProductReader.php",
            "snippet": "            ->queryStockByNeverOutOfStockAllTypes($idProduct)",
            "selected_text": "$idProduct",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 100,
            "line_to": 100,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\StockProduct\\StockProductReader::getStoreWarehouses cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/StockProduct/StockProductReader.php",
            "snippet": "        $stockNames = $this->getStoreWarehouses($storeTransfer->getName());",
            "selected_text": "$storeTransfer->getName()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 103,
            "line_to": 103,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Persistence\\StockQueryContainerInterface::queryStockByNeverOutOfStockAllTypesForStockNames cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/StockProduct/StockProductReader.php",
            "snippet": "            ->queryStockByNeverOutOfStockAllTypesForStockNames($idProduct, $stockNames)",
            "selected_text": "$idProduct",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 179,
            "line_to": 179,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\StockProduct\\StockProductReader::getStoreWarehouses cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/StockProduct/StockProductReader.php",
            "snippet": "        $storeWarehouseMapping = $this->getStoreWarehouses($storeTransfer->getName());",
            "selected_text": "$storeTransfer->getName()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 305,
            "line_to": 305,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Persistence\\StockRepositoryInterface::getStockNamesForStore cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/StockProduct/StockProductReader.php",
            "snippet": "        $stockNames = $this->stockRepository->getStockNamesForStore($storeTransfer->getName());",
            "selected_text": "$storeTransfer->getName()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 336,
            "line_to": 336,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Persistence\\StockQueryContainerInterface::queryStockByProducts cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/StockProduct/StockProductReader.php",
            "snippet": "            ->queryStockByProducts($productConcreteTransfer->requireIdProductConcrete()->getIdProductConcrete())",
            "selected_text": "$productConcreteTransfer->requireIdProductConcrete()->getIdProductConcrete()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 57,
            "line_to": 57,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Persistence\\StockRepositoryInterface::getStockProductsByIdStock cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/StockProduct/StockProductUpdater.php",
            "snippet": "        $stockProducts = $this->stockRepository->getStockProductsByIdStock($stockTransfer->getIdStock());",
            "selected_text": "$stockTransfer->getIdStock()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 59,
            "line_to": 59,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\StockProduct\\StockProductUpdater::handleStockUpdatePlugins cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/StockProduct/StockProductUpdater.php",
            "snippet": "            $this->handleStockUpdatePlugins($stockProductTransfer->getSku());",
            "selected_text": "$stockProductTransfer->getSku()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 32,
            "line_to": 32,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\DecimalObject\\Decimal::__construct cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/Propel/AbstractSpyStockProduct.php",
            "snippet": "            (new Decimal($this->getQuantity()))->subtract($amount)",
            "selected_text": "$this->getQuantity()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 44,
            "line_to": 44,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\DecimalObject\\Decimal::__construct cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/Propel/AbstractSpyStockProduct.php",
            "snippet": "            (new Decimal($this->getQuantity()))->add($amount)",
            "selected_text": "$this->getQuantity()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 56,
            "line_to": 56,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Orm\\Zed\\Stock\\Persistence\\SpyStockStore> variable ",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/Propel/Mapper/StockMapper.php",
            "snippet": "                $stockEntity->getStockStores()->getArrayCopy(),",
            "selected_text": "getArrayCopy",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 73,
            "line_to": 73,
            "type": "InvalidNullableReturnType",
            "message": "The declared return type 'int' for /media/mark/f42d91bd-14bc-4e71-936f-96ed99135be4/www/suite-nonsplit/project/vendor/spryker/spryker/bundles/stock/src/spryker/zed/stock/persistence/propel/mapper/stockstorerelationmapper.php:73:2445:-:closure is not nullable, but 'int|null' contains null",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/Propel/Mapper/StockStoreRelationMapper.php",
            "snippet": "        return array_map(function (StoreTransfer $storeTransfer): int {",
            "selected_text": "int",
            "error_level": 5,
            "shortcode": 144
        },
        {
            "severity": "info",
            "line_from": 74,
            "line_to": 74,
            "type": "NullableReturnStatement",
            "message": "The declared return type 'int' for /media/mark/f42d91bd-14bc-4e71-936f-96ed99135be4/www/suite-nonsplit/project/vendor/spryker/spryker/bundles/stock/src/spryker/zed/stock/persistence/propel/mapper/stockstorerelationmapper.php:73:2445:-:closure is not nullable, but the function returns 'int|null'",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/Propel/Mapper/StockStoreRelationMapper.php",
            "snippet": "            return $storeTransfer->getIdStore();",
            "selected_text": "$storeTransfer->getIdStore()",
            "error_level": 5,
            "shortcode": 139
        },
        {
            "severity": "info",
            "line_from": 127,
            "line_to": 127,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Orm\\Zed\\Product\\Persistence\\SpyProductAbstractQuery::usestockquery does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockQueryContainer.php",
            "snippet": "            ->useStockQuery()",
            "selected_text": "useStockQuery",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 151,
            "line_to": 151,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Orm\\Zed\\Product\\Persistence\\SpyProductAbstractQuery::usestockquery does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockQueryContainer.php",
            "snippet": "            ->useStockQuery()",
            "selected_text": "useStockQuery",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 227,
            "line_to": 227,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Propel\\Runtime\\ActiveQuery\\ModelCriteria::joinstock does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockQueryContainer.php",
            "snippet": "            ->joinStock()",
            "selected_text": "joinStock",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 256,
            "line_to": 256,
            "type": "MoreSpecificReturnType",
            "message": "The declared return type 'Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery' for Spryker\\Zed\\Stock\\Persistence\\StockQueryContainer::queryStockByIdProduct is more specific than the inferred return type 'Propel\\Runtime\\ActiveQuery\\ModelCriteria'",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockQueryContainer.php",
            "snippet": "     * @return \\Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery",
            "selected_text": "\\Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery",
            "error_level": 3,
            "shortcode": 70
        },
        {
            "severity": "info",
            "line_from": 260,
            "line_to": 266,
            "type": "LessSpecificReturnStatement",
            "message": "The type 'Orm\\Zed\\CompanySupplier\\Persistence\\SpyCompanySupplierToProductQuery|Orm\\Zed\\GiftCard\\Persistence\\SpyGiftCardProductConfigurationLinkQuery|Orm\\Zed\\PriceProductMerchantRelationship\\Persistence\\SpyPriceProductMerchantRelationshipQuery|Orm\\Zed\\PriceProductSchedule\\Persistence\\SpyPriceProductScheduleQuery|Orm\\Zed\\PriceProduct\\Persistence\\SpyPriceProductQuery|Orm\\Zed\\ProductAlternative\\Persistence\\SpyProductAlternativeQuery|Orm\\Zed\\ProductBundle\\Persistence\\SpyProductBundleQuery|Orm\\Zed\\ProductDiscontinued\\Persistence\\SpyProductDiscontinuedQuery|Orm\\Zed\\ProductImage\\Persistence\\SpyProductImageSetQuery|Orm\\Zed\\ProductList\\Persistence\\SpyProductListProductConcreteQuery|Orm\\Zed\\ProductMeasurementUnit\\Persistence\\SpyProductMeasurementSalesUnitQuery|Orm\\Zed\\ProductPackagingUnit\\Persistence\\SpyProductPackagingUnitQuery|Orm\\Zed\\ProductQuantity\\Persistence\\SpyProductQuantityQuery|Orm\\Zed\\ProductSearch\\Persistence\\SpyProductSearchQuery|Orm\\Zed\\ProductValidity\\Persistence\\SpyProductValidityQuery|Orm\\Zed\\Product\\Persistence\\SpyProductAbstractQuery|Orm\\Zed\\Product\\Persistence\\SpyProductLocalizedAttributesQuery|Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery|Orm\\Zed\\Wishlist\\Persistence\\SpyWishlistItemQuery|Propel\\Runtime\\ActiveQuery\\ModelCriteria' is more general than the declared return type 'Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery' for Spryker\\Zed\\Stock\\Persistence\\StockQueryContainer::queryStockByIdProduct",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockQueryContainer.php",
            "snippet": "        return $this->queryStockByProducts($idProduct)\n            ->useStockQuery()\n                ->withColumn(SpyStockTableMap::COL_NAME, 'stockType')\n            ->endUse()\n            ->useSpyProductQuery()\n                ->withColumn(SpyProductTableMap::COL_SKU, 'sku')\n            ->endUse();",
            "selected_text": "$this->queryStockByProducts($idProduct)\n            ->useStockQuery()\n                ->withColumn(SpyStockTableMap::COL_NAME, 'stockType')\n            ->endUse()\n            ->useSpyProductQuery()\n                ->withColumn(SpyProductTableMap::COL_SKU, 'sku')\n            ->endUse()",
            "error_level": 3,
            "shortcode": 129
        },
        {
            "severity": "info",
            "line_from": 264,
            "line_to": 264,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Propel\\Runtime\\ActiveQuery\\ModelCriteria::usespyproductquery does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockQueryContainer.php",
            "snippet": "            ->useSpyProductQuery()",
            "selected_text": "useSpyProductQuery",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 277,
            "line_to": 277,
            "type": "MoreSpecificReturnType",
            "message": "The declared return type 'Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery' for Spryker\\Zed\\Stock\\Persistence\\StockQueryContainer::queryStockByIdProductAndTypes is more specific than the inferred return type 'Propel\\Runtime\\ActiveQuery\\ModelCriteria'",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockQueryContainer.php",
            "snippet": "     * @return \\Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery",
            "selected_text": "\\Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery",
            "error_level": 3,
            "shortcode": 70
        },
        {
            "severity": "info",
            "line_from": 281,
            "line_to": 288,
            "type": "LessSpecificReturnStatement",
            "message": "The type 'Orm\\Zed\\CompanySupplier\\Persistence\\SpyCompanySupplierToProductQuery|Orm\\Zed\\GiftCard\\Persistence\\SpyGiftCardProductConfigurationLinkQuery|Orm\\Zed\\PriceProductMerchantRelationship\\Persistence\\SpyPriceProductMerchantRelationshipQuery|Orm\\Zed\\PriceProductSchedule\\Persistence\\SpyPriceProductScheduleQuery|Orm\\Zed\\PriceProduct\\Persistence\\SpyPriceProductQuery|Orm\\Zed\\ProductAlternative\\Persistence\\SpyProductAlternativeQuery|Orm\\Zed\\ProductBundle\\Persistence\\SpyProductBundleQuery|Orm\\Zed\\ProductDiscontinued\\Persistence\\SpyProductDiscontinuedQuery|Orm\\Zed\\ProductImage\\Persistence\\SpyProductImageSetQuery|Orm\\Zed\\ProductList\\Persistence\\SpyProductListProductConcreteQuery|Orm\\Zed\\ProductMeasurementUnit\\Persistence\\SpyProductMeasurementSalesUnitQuery|Orm\\Zed\\ProductPackagingUnit\\Persistence\\SpyProductPackagingUnitQuery|Orm\\Zed\\ProductQuantity\\Persistence\\SpyProductQuantityQuery|Orm\\Zed\\ProductSearch\\Persistence\\SpyProductSearchQuery|Orm\\Zed\\ProductValidity\\Persistence\\SpyProductValidityQuery|Orm\\Zed\\Product\\Persistence\\SpyProductAbstractQuery|Orm\\Zed\\Product\\Persistence\\SpyProductLocalizedAttributesQuery|Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery|Orm\\Zed\\Wishlist\\Persistence\\SpyWishlistItemQuery|Propel\\Runtime\\ActiveQuery\\ModelCriteria' is more general than the declared return type 'Orm\\Zed\\Stock\\Persistence\\SpyStockProductQuery' for Spryker\\Zed\\Stock\\Persistence\\StockQueryContainer::queryStockByIdProductAndTypes",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockQueryContainer.php",
            "snippet": "        return $this->queryStockByProducts($idProduct)\n              ->useStockQuery()\n                  ->withColumn(SpyStockTableMap::COL_NAME, 'stockType')\n                  ->filterByName($types, Criteria::IN)\n              ->endUse()\n              ->useSpyProductQuery()\n                  ->withColumn(SpyProductTableMap::COL_SKU, 'sku')\n              ->endUse();",
            "selected_text": "$this->queryStockByProducts($idProduct)\n              ->useStockQuery()\n                  ->withColumn(SpyStockTableMap::COL_NAME, 'stockType')\n                  ->filterByName($types, Criteria::IN)\n              ->endUse()\n              ->useSpyProductQuery()\n                  ->withColumn(SpyProductTableMap::COL_SKU, 'sku')\n              ->endUse()",
            "error_level": 3,
            "shortcode": 129
        },
        {
            "severity": "info",
            "line_from": 284,
            "line_to": 284,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Propel\\Runtime\\ActiveQuery\\ModelCriteria::filterbyname does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockQueryContainer.php",
            "snippet": "                  ->filterByName($types, Criteria::IN)",
            "selected_text": "filterByName",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 286,
            "line_to": 286,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Orm\\Zed\\MerchantStock\\Persistence\\SpyMerchantStockQuery::usespyproductquery does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockQueryContainer.php",
            "snippet": "              ->useSpyProductQuery()",
            "selected_text": "useSpyProductQuery",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 35,
            "line_to": 35,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Orm\\Zed\\Stock\\Persistence\\SpyStock|Propel\\Runtime\\ActiveRecord\\ActiveRecordInterface|mixed> variable ",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockRepository.php",
            "snippet": "        return $stockQuery->find()->getData();",
            "selected_text": "getData",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 53,
            "line_to": 53,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Orm\\Zed\\AvailabilityNotification\\Persistence\\SpyAvailabilityNotificationSubscription|Orm\\Zed\\Availability\\Persistence\\SpyAvailability|Orm\\Zed\\Availability\\Persistence\\SpyAvailabilityAbstract|Orm\\Zed\\CmsBlock\\Persistence\\SpyCmsBlockStore|Orm\\Zed\\Cms\\Persistence\\SpyCmsPageStore|Orm\\Zed\\Company\\Persistence\\SpyCompanyStore|Orm\\Zed\\Discount\\Persistence\\SpyDiscount|Orm\\Zed\\Discount\\Persistence\\SpyDiscountStore|Orm\\Zed\\MerchantRelationshipSalesOrderThreshold\\Persistence\\SpyMerchantRelationshipSalesOrderThreshold|Orm\\Zed\\Oms\\Persistence\\SpyOmsProductReservation|Orm\\Zed\\Payment\\Persistence\\SpyPaymentMethodStore|Orm\\Zed\\PriceProductSchedule\\Persistence\\SpyPriceProductSchedule|Orm\\Zed\\PriceProduct\\Persistence\\SpyPriceProductStore|Orm\\Zed\\ProductMeasurementUnit\\Persistence\\SpyProductMeasurementSalesUnitStore|Orm\\Zed\\ProductOffer\\Persistence\\SpyProductOfferStore|Orm\\Zed\\ProductOption\\Persistence\\SpyProductOptionValuePrice|Orm\\Zed\\ProductRelation\\Persistence\\SpyProductRelationStore|Orm\\Zed\\Product\\Persistence\\SpyProductAbstractStore|Orm\\Zed\\Quote\\Persistence\\SpyQuote|Orm\\Zed\\SalesOrderThreshold\\Persistence\\SpySalesOrderThreshold|Orm\\Zed\\Shipment\\Persistence\\SpyShipmentMethodPrice|Orm\\Zed\\Shipment\\Persistence\\SpyShipmentMethodStore|Orm\\Zed\\Stock\\Persistence\\SpyStockStore|Orm\\Zed\\Touch\\Persistence\\SpyTouchSearch|Orm\\Zed\\Touch\\Persistence\\SpyTouchStorage|Propel\\Runtime\\ActiveRecord\\ActiveRecordInterface|mixed> variable ",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockRepository.php",
            "snippet": "        return $stockStoreQuery->find()->getData();",
            "selected_text": "getData",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 90,
            "line_to": 90,
            "type": "PossiblyInvalidArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Persistence\\StockRepository::applyStockQueryFilters expects Orm\\Zed\\Stock\\Persistence\\SpyStockQuery, possibly different type Orm\\Zed\\Stock\\Persistence\\SpyStockQuery|Orm\\Zed\\Store\\Persistence\\SpyStoreQuery provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockRepository.php",
            "snippet": "        $stockQuery = $this->applyStockQueryFilters($stockQuery, $stockCriteriaFilterTransfer);",
            "selected_text": "$stockQuery",
            "error_level": 3,
            "shortcode": 92
        },
        {
            "severity": "info",
            "line_from": 94,
            "line_to": 94,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Orm\\Zed\\Stock\\Persistence\\SpyStock> variable ",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockRepository.php",
            "snippet": "            ->mapStockEntitiesToStockTransfers($stockQuery->find()->getArrayCopy());",
            "selected_text": "getArrayCopy",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 133,
            "line_to": 133,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Orm\\Zed\\Stock\\Persistence\\SpyStockProduct> variable ",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockRepository.php",
            "snippet": "            ->mapStockProductEntitiesToStockProductTransfers($stockProductQuery->find()->getArrayCopy());",
            "selected_text": "getArrayCopy",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 152,
            "line_to": 152,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Orm\\Zed\\Stock\\Persistence\\SpyStockStore> variable ",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockRepository.php",
            "snippet": "                $stockStoreQuery->find()->getArrayCopy(),",
            "selected_text": "getArrayCopy",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 169,
            "line_to": 169,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Orm\\Zed\\Stock\\Persistence\\SpyStockProduct> variable $stockProductEntities",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockRepository.php",
            "snippet": "            ->mapStockProductEntitiesToStockProductTransfers($stockProductEntities->getData());",
            "selected_text": "getData",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 195,
            "line_to": 195,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Orm\\Zed\\Stock\\Persistence\\SpyStockProduct> variable $stockProductEntities",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockRepository.php",
            "snippet": "        if ($stockProductEntities->count() === 0) {",
            "selected_text": "count",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 201,
            "line_to": 201,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Orm\\Zed\\Stock\\Persistence\\SpyStockProduct> variable $stockProductEntities",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockRepository.php",
            "snippet": "            ->mapStockProductEntitiesToStockProductTransfers($stockProductEntities->getArrayCopy());",
            "selected_text": "getArrayCopy",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 218,
            "line_to": 218,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Orm\\Zed\\Product\\Persistence\\SpyProductAbstractQuery::usestockquery does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockRepository.php",
            "snippet": "            ->useStockQuery(null, Criteria::LEFT_JOIN)",
            "selected_text": "useStockQuery",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 223,
            "line_to": 223,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Orm\\Zed\\MerchantStock\\Persistence\\SpyMerchantStock|Orm\\Zed\\ProductOfferStock\\Persistence\\SpyProductOfferStock|Orm\\Zed\\Stock\\Persistence\\SpyStockProduct|Orm\\Zed\\Stock\\Persistence\\SpyStockStore> variable $stockProductEntities",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockRepository.php",
            "snippet": "        if ($stockProductEntities->count() === 0) {",
            "selected_text": "count",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 229,
            "line_to": 229,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Orm\\Zed\\MerchantStock\\Persistence\\SpyMerchantStock|Orm\\Zed\\ProductOfferStock\\Persistence\\SpyProductOfferStock|Orm\\Zed\\Stock\\Persistence\\SpyStockProduct|Orm\\Zed\\Stock\\Persistence\\SpyStockStore> variable $stockProductEntities",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockRepository.php",
            "snippet": "            ->mapStockProductEntitiesToStockProductTransfers($stockProductEntities->getArrayCopy());",
            "selected_text": "getArrayCopy",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 247,
            "line_to": 247,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Orm\\Zed\\Category\\Persistence\\SpyCategoryNodeQuery::usestockquery does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockRepository.php",
            "snippet": "            ->useStockQuery(null, Criteria::LEFT_JOIN)",
            "selected_text": "useStockQuery",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 270,
            "line_to": 270,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Orm\\Zed\\Product\\Persistence\\SpyProductAbstractQuery::usestockquery does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockRepository.php",
            "snippet": "            ->useStockQuery(null, Criteria::LEFT_JOIN)",
            "selected_text": "useStockQuery",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 305,
            "line_to": 305,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Orm\\Zed\\Acl\\Persistence\\SpyAclUserHasGroup|Orm\\Zed\\Auth\\Persistence\\SpyResetPassword|Orm\\Zed\\AvailabilityNotification\\Persistence\\SpyAvailabilityNotificationSubscription|Orm\\Zed\\Availability\\Persistence\\SpyAvailability|Orm\\Zed\\Availability\\Persistence\\SpyAvailabilityAbstract|Orm\\Zed\\CategoryImage\\Persistence\\SpyCategoryImageSet|Orm\\Zed\\CategoryImage\\Persistence\\SpyCategoryImageSetToCategoryImage|Orm\\Zed\\Category\\Persistence\\SpyCategory|Orm\\Zed\\Category\\Persistence\\SpyCategoryAttribute|Orm\\Zed\\Category\\Persistence\\SpyCategoryClosureTable|Orm\\Zed\\Category\\Persistence\\SpyCategoryNode|Orm\\Zed\\Category\\Persistence\\SpyCategoryTemplate|Orm\\Zed\\CmsBlockCategoryConnector\\Persistence\\SpyCmsBlockCategoryConnector|Orm\\Zed\\CmsBlockProductConnector\\Persistence\\SpyCmsBlockProductConnector|Orm\\Zed\\CmsBlock\\Persistence\\SpyCmsBlock|Orm\\Zed\\CmsBlock\\Persistence\\SpyCmsBlockGlossaryKeyMapping|Orm\\Zed\\CmsBlock\\Persistence\\SpyCmsBlockStore|Orm\\Zed\\CmsBlock\\Persistence\\SpyCmsBlockTemplate|Orm\\Zed\\CmsSlotBlock\\Persistence\\SpyCmsSlotBlock|Orm\\Zed\\Cms\\Persistence\\SpyCmsGlossaryKeyMapping|Orm\\Zed\\Cms\\Persistence\\SpyCmsPage|Orm\\Zed\\Cms\\Persistence\\SpyCmsPageLocalizedAttributes|Orm\\Zed\\Cms\\Persistence\\SpyCmsPageStore|Orm\\Zed\\Cms\\Persistence\\SpyCmsTemplate|Orm\\Zed\\Cms\\Persistence\\SpyCmsVersion|Orm\\Zed\\Comment\\Persistence\\SpyComment|Orm\\Zed\\CompanyBusinessUnit\\Persistence\\SpyCompanyBusinessUnit|Orm\\Zed\\CompanyRole\\Persistence\\SpyCompanyRole|Orm\\Zed\\CompanyRole\\Persistence\\SpyCompanyRoleToCompanyUser|Orm\\Zed\\CompanyRole\\Persistence\\SpyCompanyRoleToPermission|Orm\\Zed\\CompanySupplier\\Persistence\\SpyCompanySupplierToProduct|Orm\\Zed\\CompanySupplier\\Persistence\\SpyCompanyType|Orm\\Zed\\CompanyUnitAddressLabel\\Persistence\\SpyCompanyUnitAddressLabelToCompanyUnitAddress|Orm\\Zed\\CompanyUnitAddress\\Persistence\\SpyCompanyUnitAddress|Orm\\Zed\\CompanyUnitAddress\\Persistence\\SpyCompanyUnitAddressToCompanyBusinessUnit|Orm\\Zed\\CompanyUserInvitation\\Persistence\\SpyCompanyUserInvitation|Orm\\Zed\\CompanyUser\\Persistence\\SpyCompanyUser|Orm\\Zed\\Company\\Persistence\\SpyCompany|Orm\\Zed\\Company\\Persistence\\SpyCompanyStore|Orm\\Zed\\ConfigurableBundle\\Persistence\\SpyConfigurableBundleTemplate|Orm\\Zed\\ConfigurableBundle\\Persistence\\SpyConfigurableBundleTemplateSlot|Orm\\Zed\\Content\\Persistence\\SpyContent|Orm\\Zed\\Content\\Persistence\\SpyContentLocalized|Orm\\Zed\\Country\\Persistence\\SpyCountry|Orm\\Zed\\Country\\Persistence\\SpyRegion|Orm\\Zed\\Currency\\Persistence\\SpyCurrency|Orm\\Zed\\CustomerGroup\\Persistence\\SpyCustomerGroupToCustomer|Orm\\Zed\\CustomerNote\\Persistence\\SpyCustomerNote|Orm\\Zed\\Customer\\Persistence\\SpyCustomer|Orm\\Zed\\Customer\\Persistence\\SpyCustomerAddress|Orm\\Zed\\Dataset\\Persistence\\SpyDataset|Orm\\Zed\\Dataset\\Persistence\\SpyDatasetLocalizedAttributes|Orm\\Zed\\DiscountPromotion\\Persistence\\SpyDiscountPromotion|Orm\\Zed\\Discount\\Persistence\\SpyDiscount|Orm\\Zed\\Discount\\Persistence\\SpyDiscountAmount|Orm\\Zed\\Discount\\Persistence\\SpyDiscountStore|Orm\\Zed\\Discount\\Persistence\\SpyDiscountVoucherPool|Orm\\Zed\\FileManager\\Persistence\\SpyFile|Orm\\Zed\\FileManager\\Persistence\\SpyFileDirectory|Orm\\Zed\\FileManager\\Persistence\\SpyFileDirectoryLocalizedAttributes|Orm\\Zed\\FileManager\\Persistence\\SpyFileLocalizedAttributes|Orm\\Zed\\GiftCardBalance\\Persistence\\SpyGiftCardBalanceLog|Orm\\Zed\\GiftCard\\Persistence\\SpyGiftCardProductAbstractConfiguration|Orm\\Zed\\GiftCard\\Persistence\\SpyGiftCardProductAbstractConfigurationLink|Orm\\Zed\\GiftCard\\Persistence\\SpyGiftCardProductConfiguration|Orm\\Zed\\GiftCard\\Persistence\\SpyGiftCardProductConfigurationLink|Orm\\Zed\\Glossary\\Persistence\\SpyGlossaryKey|Orm\\Zed\\Glossary\\Persistence\\SpyGlossaryTranslation|Orm\\Zed\\Locale\\Persistence\\SpyLocale|Orm\\Zed\\ManualOrderEntry\\Persistence\\SpyOrderSource|Orm\\Zed\\MerchantOpeningHours\\Persistence\\SpyMerchantOpeningHoursDateSchedule|Orm\\Zed\\MerchantOpeningHours\\Persistence\\SpyMerchantOpeningHoursWeekdaySchedule|Orm\\Zed\\MerchantProfile\\Persistence\\SpyMerchantProfile|Orm\\Zed\\MerchantProfile\\Persistence\\SpyMerchantProfileAddress|Orm\\Zed\\MerchantRelationshipSalesOrderThreshold\\Persistence\\SpyMerchantRelationshipSalesOrderThreshold|Orm\\Zed\\MerchantRelationship\\Persistence\\SpyMerchantRelationship|Orm\\Zed\\MerchantRelationship\\Persistence\\SpyMerchantRelationshipToCompanyBusinessUnit|Orm\\Zed\\MerchantSalesOrder\\Persistence\\SpyMerchantSalesOrder|Orm\\Zed\\MerchantStock\\Persistence\\SpyMerchantStock|Orm\\Zed\\MerchantUser\\Persistence\\SpyMerchantUser|Orm\\Zed\\Merchant\\Persistence\\SpyMerchant|Orm\\Zed\\Navigation\\Persistence\\SpyNavigationNode|Orm\\Zed\\Navigation\\Persistence\\SpyNavigationNodeLocalizedAttributes|Orm\\Zed\\Newsletter\\Persistence\\SpyNewsletterSubscriber|Orm\\Zed\\Offer\\Persistence\\SpyOffer|Orm\\Zed\\Oms\\Persistence\\SpyOmsProductReservation|Orm\\Zed\\Oms\\Persistence\\SpyOmsTransitionLog|Orm\\Zed\\Payment\\Persistence\\SpyPaymentMethod|Orm\\Zed\\Payment\\Persistence\\SpyPaymentMethodStore|Orm\\Zed\\Payment\\Persistence\\SpySalesPayment|Orm\\Zed\\PriceProductMerchantRelationship\\Persistence\\SpyPriceProductMerchantRelationship|Orm\\Zed\\PriceProductOffer\\Persistence\\SpyPriceProductOffer|Orm\\Zed\\PriceProductSchedule\\Persistence\\SpyPriceProductSchedule|Orm\\Zed\\PriceProductSchedule\\Persistence\\SpyPriceProductScheduleList|Orm\\Zed\\PriceProduct\\Persistence\\SpyPriceProduct|Orm\\Zed\\PriceProduct\\Persistence\\SpyPriceProductDefault|Orm\\Zed\\PriceProduct\\Persistence\\SpyPriceProductStore|Orm\\Zed\\PriceProduct\\Persistence\\SpyPriceType|Orm\\Zed\\ProductAlternative\\Persistence\\SpyProductAlternative|Orm\\Zed\\ProductAttribute\\Persistence\\SpyProductManagementAttributeValue|Orm\\Zed\\ProductAttribute\\Persistence\\SpyProductManagementAttributeValueTranslation|Orm\\Zed\\ProductBundle\\Persistence\\SpyProductBundle|Orm\\Zed\\ProductCategoryFilter\\Persistence\\SpyProductCategoryFilter|Orm\\Zed\\ProductCategory\\Persistence\\SpyProductCategory|Orm\\Zed\\ProductCustomerPermission\\Persistence\\SpyProductCustomerPermission|Orm\\Zed\\ProductDiscontinued\\Persistence\\SpyProductDiscontinued|Orm\\Zed\\ProductDiscontinued\\Persistence\\SpyProductDiscontinuedNote|Orm\\Zed\\ProductGroup\\Persistence\\SpyProductAbstractGroup|Orm\\Zed\\ProductGroup\\Persistence\\SpyProductGroup|Orm\\Zed\\ProductImage\\Persistence\\SpyProductImage|Orm\\Zed\\ProductImage\\Persistence\\SpyProductImageSet|Orm\\Zed\\ProductImage\\Persistence\\SpyProductImageSetToProductImage|Orm\\Zed\\ProductLabel\\Persistence\\SpyProductLabel|Orm\\Zed\\ProductLabel\\Persistence\\SpyProductLabelLocalizedAttributes|Orm\\Zed\\ProductLabel\\Persistence\\SpyProductLabelProductAbstract|Orm\\Zed\\ProductList\\Persistence\\SpyProductList|Orm\\Zed\\ProductList\\Persistence\\SpyProductListCategory|Orm\\Zed\\ProductList\\Persistence\\SpyProductListProductConcrete|Orm\\Zed\\ProductMeasurementUnit\\Persistence\\SpyProductMeasurementBaseUnit|Orm\\Zed\\ProductMeasurementUnit\\Persistence\\SpyProductMeasurementSalesUnit|Orm\\Zed\\ProductMeasurementUnit\\Persistence\\SpyProductMeasurementSalesUnitStore|Orm\\Zed\\ProductMeasurementUnit\\Persistence\\SpyProductMeasurementUnit|Orm\\Zed\\ProductOffer\\Persistence\\SpyProductOffer|Orm\\Zed\\ProductOffer\\Persistence\\SpyProductOfferStore|Orm\\Zed\\ProductOption\\Persistence\\SpyProductAbstractProductOptionGroup|Orm\\Zed\\ProductOption\\Persistence\\SpyProductOptionGroup|Orm\\Zed\\ProductOption\\Persistence\\SpyProductOptionValue|Orm\\Zed\\ProductOption\\Persistence\\SpyProductOptionValuePrice|Orm\\Zed\\ProductPackagingUnit\\Persistence\\SpyProductPackagingUnit|Orm\\Zed\\ProductPackagingUnit\\Persistence\\SpyProductPackagingUnitType|Orm\\Zed\\ProductQuantity\\Persistence\\SpyProductQuantity|Orm\\Zed\\ProductRelation\\Persistence\\SpyProductRelation|Orm\\Zed\\ProductRelation\\Persistence\\SpyProductRelationProductAbstract|Orm\\Zed\\ProductRelation\\Persistence\\SpyProductRelationStore|Orm\\Zed\\ProductRelation\\Persistence\\SpyProductRelationType|Orm\\Zed\\ProductReview\\Persistence\\SpyProductReview|Orm\\Zed\\ProductSearch\\Persistence\\SpyProductSearch|Orm\\Zed\\ProductSet\\Persistence\\SpyProductAbstractSet|Orm\\Zed\\ProductSet\\Persistence\\SpyProductSet|Orm\\Zed\\ProductSet\\Persistence\\SpyProductSetData|Orm\\Zed\\ProductValidity\\Persistence\\SpyProductValidity|Orm\\Zed\\Product\\Persistence\\SpyProduct|Orm\\Zed\\Product\\Persistence\\SpyProductAbstract|Orm\\Zed\\Product\\Persistence\\SpyProductAbstractLocalizedAttributes|Orm\\Zed\\Product\\Persistence\\SpyProductAbstractStore|Orm\\Zed\\Product\\Persistence\\SpyProductLocalizedAttributes|Orm\\Zed\\QuoteApproval\\Persistence\\SpyQuoteApproval|Orm\\Zed\\QuoteRequest\\Persistence\\SpyQuoteRequest|Orm\\Zed\\Quote\\Persistence\\SpyQuote|Orm\\Zed\\Refund\\Persistence\\SpyRefund|Orm\\Zed\\SalesOrderThreshold\\Persistence\\SpySalesOrderThreshold|Orm\\Zed\\SalesOrderThreshold\\Persistence\\SpySalesOrderThresholdTaxSet|Orm\\Zed\\SalesOrderThreshold\\Persistence\\SpySalesOrderThresholdType|Orm\\Zed\\SalesReclamation\\Persistence\\SpySalesReclamation|Orm\\Zed\\Sales\\Persistence\\SpySalesDiscount|Orm\\Zed\\Sales\\Persistence\\SpySalesExpense|Orm\\Zed\\Sales\\Persistence\\SpySalesOrder|Orm\\Zed\\Sales\\Persistence\\SpySalesOrderAddress|Orm\\Zed\\Sales\\Persistence\\SpySalesOrderComment|Orm\\Zed\\Sales\\Persistence\\SpySalesOrderItem|Orm\\Zed\\Sales\\Persistence\\SpySalesOrderNote|Orm\\Zed\\Sales\\Persistence\\SpySalesOrderTotals|Orm\\Zed\\Sales\\Persistence\\SpySalesShipment|Orm\\Zed\\SharedCart\\Persistence\\SpyQuoteCompanyUser|Orm\\Zed\\Shipment\\Persistence\\SpyShipmentCarrier|Orm\\Zed\\Shipment\\Persistence\\SpyShipmentMethod|Orm\\Zed\\Shipment\\Persistence\\SpyShipmentMethodPrice|Orm\\Zed\\Shipment\\Persistence\\SpyShipmentMethodStore|Orm\\Zed\\ShoppingList\\Persistence\\SpyShoppingListCompanyBusinessUnit|Orm\\Zed\\ShoppingList\\Persistence\\SpyShoppingListCompanyBusinessUnitBlacklist|Orm\\Zed\\ShoppingList\\Persistence\\SpyShoppingListCompanyUser|Orm\\Zed\\StateMachine\\Persistence\\SpyStateMachineProcess|Orm\\Zed\\Stock\\Persistence\\SpyStock|Orm\\Zed\\Stock\\Persistence\\SpyStockProduct|Orm\\Zed\\Stock\\Persistence\\SpyStockStore|Orm\\Zed\\Store\\Persistence\\SpyStore|Orm\\Zed\\Tax\\Persistence\\SpyTaxRate|Orm\\Zed\\Tax\\Persistence\\SpyTaxSet|Orm\\Zed\\Tax\\Persistence\\SpyTaxSetTax|Orm\\Zed\\Touch\\Persistence\\SpyTouch|Orm\\Zed\\Touch\\Persistence\\SpyTouchSearch|Orm\\Zed\\Touch\\Persistence\\SpyTouchStorage|Orm\\Zed\\Url\\Persistence\\SpyUrl|Orm\\Zed\\Url\\Persistence\\SpyUrlRedirect|Orm\\Zed\\User\\Persistence\\SpyUser|Orm\\Zed\\Wishlist\\Persistence\\SpyWishlist|Orm\\Zed\\Wishlist\\Persistence\\SpyWishlistItem|Propel\\Runtime\\ActiveRecord\\ActiveRecordInterface|mixed> variable ",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/StockRepository.php",
            "snippet": "            ->mapStoreEntitiesToStoreTransfers($query->find()->getArrayCopy());",
            "selected_text": "getArrayCopy",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 65,
            "line_to": 65,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Spryker\\Shared\\Kernel\\BundleProxy::facade does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/StockDependencyProvider.php",
            "snippet": "            return new StockToStoreFacadeBridge($container->getLocator()->store()->facade());",
            "selected_text": "facade",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 93,
            "line_to": 93,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Spryker\\Shared\\Kernel\\BundleProxy::facade does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/StockDependencyProvider.php",
            "snippet": "            return new StockToProductBridge($container->getLocator()->product()->facade());",
            "selected_text": "facade",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 107,
            "line_to": 107,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Spryker\\Shared\\Kernel\\BundleProxy::facade does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/StockDependencyProvider.php",
            "snippet": "            return new StockToTouchBridge($container->getLocator()->touch()->facade());",
            "selected_text": "facade",
            "error_level": 4,
            "shortcode": 219
        }
    ],
    "deprecation": [
        {
            "severity": "info",
            "line_from": 80,
            "line_to": 80,
            "type": "DeprecatedClass",
            "message": "Class Generated\\Shared\\Transfer\\TypeTransfer is marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Writer.php",
            "snippet": "     * @param \\Generated\\Shared\\Transfer\\TypeTransfer $stockTypeTransfer",
            "selected_text": "\\Generated\\Shared\\Transfer\\TypeTransfer",
            "error_level": 2,
            "shortcode": 98
        },
        {
            "severity": "info",
            "line_from": 94,
            "line_to": 94,
            "type": "DeprecatedClass",
            "message": "Class Generated\\Shared\\Transfer\\TypeTransfer is marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Writer.php",
            "snippet": "     * @param \\Generated\\Shared\\Transfer\\TypeTransfer $stockTypeTransfer",
            "selected_text": "\\Generated\\Shared\\Transfer\\TypeTransfer",
            "error_level": 2,
            "shortcode": 98
        },
        {
            "severity": "info",
            "line_from": 20,
            "line_to": 20,
            "type": "DeprecatedClass",
            "message": "Class Generated\\Shared\\Transfer\\TypeTransfer is marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/WriterInterface.php",
            "snippet": "     * @param \\Generated\\Shared\\Transfer\\TypeTransfer $stockTypeTransfer",
            "selected_text": "\\Generated\\Shared\\Transfer\\TypeTransfer",
            "error_level": 2,
            "shortcode": 98
        },
        {
            "severity": "info",
            "line_from": 125,
            "line_to": 125,
            "type": "DeprecatedClass",
            "message": "Class Generated\\Shared\\Transfer\\TypeTransfer is marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/StockFacade.php",
            "snippet": "     * @param \\Generated\\Shared\\Transfer\\TypeTransfer $stockTypeTransfer",
            "selected_text": "\\Generated\\Shared\\Transfer\\TypeTransfer",
            "error_level": 2,
            "shortcode": 98
        },
        {
            "severity": "info",
            "line_from": 131,
            "line_to": 131,
            "type": "DeprecatedMethod",
            "message": "The method Spryker\\Zed\\Stock\\Business\\Model\\WriterInterface::createStockType has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/StockFacade.php",
            "snippet": "        return $this->getFactory()->createWriterModel()->createStockType($stockTypeTransfer);",
            "selected_text": "createStockType",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 112,
            "line_to": 112,
            "type": "DeprecatedClass",
            "message": "Class Generated\\Shared\\Transfer\\TypeTransfer is marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/StockFacadeInterface.php",
            "snippet": "     * @param \\Generated\\Shared\\Transfer\\TypeTransfer $stockTypeTransfer",
            "selected_text": "\\Generated\\Shared\\Transfer\\TypeTransfer",
            "error_level": 2,
            "shortcode": 98
        }
    ]
}